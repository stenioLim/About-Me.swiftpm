<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Alpha</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Alfa, o el *canal alfa*, se refiere a la opacidad de un color, que va desde `0` (completamente transparente) a `1` (completamente opaco). Los datos alfa son un valor `Double` (número decimal) del 0 al 1.</string>
				<key>Title</key>
				<string>alfa</string>
			</dict>
		</dict>
		<key>Boolean</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un tipo que tiene un valor ya sea `true` o `false`. Por ejemplo, `9 &lt; 7` devuelve un valor booleano `false` ya que `9` no es menor que `7`.</string>
				<key>Title</key>
				<string>booleano</string>
			</dict>
		</dict>
		<key>Double</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un tipo que almacena números que tienen un componente fraccionario, como 3.14. Nota: en Swift Playgrounds se debe usar siempre el punto (.) y no la coma (,) como separador decimal.</string>
				<key>Title</key>
				<string>Double</string>
			</dict>
		</dict>
		<key>Int</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un tipo que almacena un número entero, como `10` o `-42`.</string>
				<key>Title</key>
				<string>Int</string>
			</dict>
		</dict>
		<key>String</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un tipo que almacena una serie de caracteres, como `"hola, mundo"` o `"gatitos bailarines"`.</string>
				<key>Title</key>
				<string>String</string>
			</dict>
		</dict>
		<key>Swift</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lenguaje de programación de Apple, usado para escribir apps para iPhone, iPad, Mac, Apple Watch y Apple TV.</string>
				<key>Title</key>
				<string>Swift</string>
			</dict>
		</dict>
		<key>SwiftUI</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>SwiftUI es una forma moderna de declarar interfaces de usuario para cualquier plataforma Apple, y te ofrece visualizaciones, controles y estructuras de disposición para declarar la interfaz de usuario de tu app. La estructura proporciona controladores de eventos para manejar toques, gestos y otros tipos de entrada en tu app, así como herramientas para administrar el flujo de datos de los modelos de tu app hacia las visualizaciones y los controles que los usuarios ven y con los que interactúan.</string>
				<key>Title</key>
				<string>SwiftUI</string>
			</dict>
		</dict>
		<key>absolute value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El valor sin signo de un número. Por ejemplo, el valor absoluto de -12 es 12 y el valor absoluto de 23.4 es 23.4.</string>
				<key>Title</key>
				<string>valor absoluto</string>
			</dict>
		</dict>
		<key>abstraction</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una versión simplificada de algo más complejo.   Una abstracción oculta los detalles para que sea más fácil concentrarse y combinar elementos del código.   Por ejemplo, un [tipo](glossary://type) es una abstracción que oculta la configuración, las propiedades y los métodos de una instancia de ese tipo.</string>
				<key>Title</key>
				<string>abstracción</string>
			</dict>
		</dict>
		<key>accelerometer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un sensor que mide la aceleración de tu dispositivo en tres dimensiones: arriba y abajo, adelante y atrás, e izquierda y derecha.</string>
				<key>Title</key>
				<string>acelerómetro</string>
			</dict>
		</dict>
		<key>adopt</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Para adoptar un protocolo, un tipo proporciona un conjunto de sus propias implementaciones para los requisitos del protocolo, tal como una lista de sus métodos y propiedades.</string>
				<key>Title</key>
				<string>adoptar</string>
			</dict>
		</dict>
		<key>algorithm</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto de instrucciones o reglas detalladas para resolver un problema. Por ejemplo, una lista de los pasos necesarios para hacer una taza de café se puede considerar un algoritmo.</string>
				<key>Title</key>
				<string>algoritmo</string>
			</dict>
		</dict>
		<key>append</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agregar un elemento al final de algo. Por ejemplo, puedes agregar un string al final de otro string; o agregar un elemento a un arreglo de elementos.
</string>
				<key>Title</key>
				<string>agregar al final</string>
			</dict>
		</dict>
		<key>application</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Software creado usando código que te permite realizar tareas específicas. Por ejemplo, puedes usar la aplicación (app) Mensajes para enviar y recibir mensajes.</string>
				<key>Title</key>
				<string>aplicación</string>
			</dict>
		</dict>
		<key>argument</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un valor de entrada que se pasa a una función para personalizar su comportamiento. Por ejemplo, en la función `move(distance: 3)`, el número `3` es un argumento que especifica cuántos espacios moverse.</string>
				<key>Title</key>
				<string>argumento</string>
			</dict>
		</dict>
		<key>arithmetic operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo, como `+`, `-`, `*` o `/`, que realiza una operación matemática básica en uno o más números. Por ejemplo, `42 / 7` y `17 - 5` usan operadores aritméticos.</string>
				<key>Title</key>
				<string>operador aritmético</string>
			</dict>
		</dict>
		<key>array</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una colección que almacena una lista ordenada de elementos del mismo tipo. El mismo elemento puede aparecer varias veces en distintas posiciones. Por ejemplo, `highScores = [37, 34, 29, 29, 26]` es un arreglo de valores [enteros](glossary://Int).</string>
				<key>Title</key>
				<string>arreglo</string>
			</dict>
		</dict>
		<key>asset</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Los componentes son imágenes, sonidos y demás elementos que tu app utiliza. Puedes importarlos a Swift Playgrounds desde otras apps, como Archivos y Fotos.</string>
				<key>Title</key>
				<string>componente</string>
			</dict>
		</dict>
		<key>assignment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una acción que establece el valor de una variable o constante.</string>
				<key>Title</key>
				<string>asignación</string>
			</dict>
		</dict>
		<key>assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El símbolo `=` se usa para establecer el valor de una variable. Por ejemplo, `greeting = "hola"` establece el valor de `greeting` a `"hola"`.</string>
				<key>Title</key>
				<string>operador de asignación</string>
			</dict>
		</dict>
		<key>asynchronous process</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código que se puede ejecutar mientras el resto de la app o programa se sigue ejecutando. A diferencia de un proceso sincrónico, que bloquea la ejecución del programa hasta que se completa, un proceso asincrónico puede ejecutarse de forma simultánea con el resto del código de tu app.</string>
				<key>Title</key>
				<string>proceso asincrónico</string>
			</dict>
		</dict>
		<key>binding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agrega el [contenedor de propiedades](glossary://property%20wrapper) `@Binding` —ligadura— para crear una conexión bidireccional entre una propiedad que almacena datos y una visualización que muestra y cambia esos datos. Una ligadura conecta una propiedad a una fuente única de información que está almacenada en otro lugar, en lugar de almacenar los datos directamente. 

Por ejemplo, un botón que cambia entre reproducir y pausar puede crear una ligadura con una propiedad de su visualización superior mediante el contenedor de propiedades `@Binding`.
</string>
				<key>Title</key>
				<string>ligadura</string>
			</dict>
		</dict>
		<key>body</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El cuerpo de una [visualización](glossary://view) es el lugar en donde proporcionas el contenido de la visualización, compuesto de al menos una [visualización primitiva](glossary://primitive%20view) que ofrece SwiftUI, o bien cualquier [visualización compuesta](glossary://composed%20view) creada previamente.</string>
				<key>Title</key>
				<string>cuerpo</string>
			</dict>
		</dict>
		<key>bounds</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En un arreglo, es el intervalo de valores que un índice de arreglo puede tener. Por ejemplo, el arreglo `[17, 42, 95]` puede tener valores de índice del 0 al 2. La comprobación de los límites es el proceso de verificar que un valor de índice esté dentro de los límites de un arreglo.</string>
				<key>Title</key>
				<string>límites</string>
			</dict>
		</dict>
		<key>brightness</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La cantidad de luz que proviene de la cámara, de `0` (sin luz) a `1` (luz completa). Los datos de brillo deben ser un valor [`Double`](glossary://Double) (número decimal) del `0` al `1`.</string>
				<key>Title</key>
				<string>brillo</string>
			</dict>
		</dict>
		<key>bug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un error en el código que evita que una aplicación se ejecute como se esperaba. 
</string>
				<key>Title</key>
				<string>error</string>
			</dict>
		</dict>
		<key>bundle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una representación del código y los recursos almacenados en un directorio de paquetes en el disco. Los paquetes organizan los recursos que contienen en subdirectorios bien definidos, y las estructuras de los paquetes varían según la plataforma y el tipo de paquete. Al usar un objeto de paquete, puedes acceder a los recursos de un paquete sin conocer su estructura.</string>
				<key>Title</key>
				<string>paquete</string>
			</dict>
		</dict>
		<key>call</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Llamar a una función significa darle la instrucción a esa función para que se ejecute, lo que hace que se realicen las acciones que están definidas dentro de ella.</string>
				<key>Title</key>
				<string>llamar</string>
			</dict>
		</dict>
		<key>child view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una visualización que está dentro de una [visualización superior](glossary://parent%20view). Una visualización superior puede contener muchas visualizaciones secundarias, cada una de las cuales puede contener sus propias visualizaciones secundarias. Una visualización y todas sus descendientes forman una [jerarquía de visualizaciones](glossary://view%20hierarchy).</string>
				<key>Title</key>
				<string>visualización secundaria</string>
			</dict>
		</dict>
		<key>class</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una clase es un contenedor de código que actúa como un plano para hacer varias copias del mismo tipo de cosa. De la misma manera que un plano puede definir las características y los comportamientos de un objeto, como una bicicleta, una clase los define como [propiedades](glossary://property) y [métodos](glossary://method).

Al crear una nueva copia, o [instancia](glossary://instance), de una clase, dicha instancia contiene todas las propiedades y métodos de tu plano. Sin embargo, puedes modificar los valores de cada instancia por separado, lo que permite personalizar el comportamiento de cada copia. Por ejemplo, una clase de bicicleta puede tener una propiedad de color, lo que te permite crear bicicletas rojas y azules.</string>
				<key>Title</key>
				<string>clase</string>
			</dict>
		</dict>
		<key>closure</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Las clausuras son [funciones](glossary://function) que se ejecutan en su lugar sin necesidad de un nombre.
					
```
scene.setOnStartHandler {
    // Cuerpo de la clausura
}
```
Las clausuras pueden capturar y almacenar referencias a cualquier constante y variable del contexto en el que están definidas. Esto se conoce como la clausura de esas constantes y variables.</string>
				<key>Title</key>
				<string>clausura</string>
			</dict>
		</dict>
		<key>code comment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un comentario de código es una manera en que los programadores agregan anotaciones sobre su código.   Puedes iniciar un comentario de una línea con dos diagonales seguidas por un espacio; por ejemplo "// Este es mi comentario.".   Cuando ejecutas tu código, los comentarios de código no se ejecutan.</string>
				<key>Title</key>
				<string>comentario de código</string>
			</dict>
		</dict>
		<key>code expression</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una porción de código que se puede evaluar para devolver un valor. Por ejemplo, si `months` es un arreglo que contiene 12 elementos, la expresión de código `months.count - 1` devuelve el valor `11`.</string>
				<key>Title</key>
				<string>expresión de código</string>
			</dict>
		</dict>
		<key>coding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El acto de componer comandos, estructuras de código y algoritmos para crear una aplicación.</string>
				<key>Title</key>
				<string>programar</string>
			</dict>
		</dict>
		<key>collection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una estructura de datos, como un arreglo o diccionario, que se usa para almacenar varias porciones de datos.</string>
				<key>Title</key>
				<string>colección</string>
			</dict>
		</dict>
		<key>command</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Código que le indica a una aplicación que realice una acción específica. </string>
				<key>Title</key>
				<string>comando</string>
			</dict>
		</dict>
		<key>comment out</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Impedir que una línea de código se ejecute al convertirla en un [comentario de código](glossary://code%20comment). Puedes hacerlo agregando `//` al inicio de la línea de código. Por ejemplo:
                
`// level.run()`</string>
				<key>Title</key>
				<string>marcar como comentario</string>
			</dict>
		</dict>
		<key>comparison operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo, como `==`, `!=`, `&lt;`, `&gt;`, `&lt;=` o `&gt;=`, que se usa para comparar dos valores. Un operador de comparación se puede usar en una condición de un enunciado `if` o de un ciclo `while` para que devuelva un valor booleano que indique si una comparación es `true`. Por ejemplo, `6 &gt; 8` compara `6` con `8` y devuelve `false`.</string>
				<key>Title</key>
				<string>operador de comparación</string>
			</dict>
		</dict>
		<key>compiler error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Los errores de compilación suceden debido a errores de precisión en el código. Los verás marcados con un punto rojo en el margen izquierdo y en la barra de herramientas.</string>
				<key>Title</key>
				<string>error de compilación</string>
			</dict>
		</dict>
		<key>composed view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una [visualización](glossary://view) creada al combinar una o más visualizaciones compuestas o [primitivas](glossary://primitive%20view).</string>
				<key>Title</key>
				<string>visualización compuesta</string>
			</dict>
		</dict>
		<key>composition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El proceso de combinar partes pequeñas de una aplicación para formar piezas más grandes que son más fáciles de comprender y con las que es más sencillo trabajar.</string>
				<key>Title</key>
				<string>composición</string>
			</dict>
		</dict>
		<key>compound assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un operador que combina asignaciones (establecer el valor de una variable) con otra operación, como una suma o una resta. Por ejemplo, si el valor actual de `a` es `1`, al usar `a += 3` se agrega `3` a `1` y se asigna el resultado a `a`, por lo que ahora el valor de `a` es `4`.</string>
				<key>Title</key>
				<string>operador de asignación compuesta</string>
			</dict>
		</dict>
		<key>computed property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En lugar de almacenar un valor directamente, una propiedad calculada mide un valor en función del estado actual de otros valores relacionados cuando se obtiene.

En el ejemplo de abajo, `area` es una propiedad calculada, mientras que `width` y `height` son propiedades almacenadas:

```
struct RectangleCalculator { 
    var width = 10.0
    var height = 10.0
    
    var area : Double { 
        return width * height
    }
} 
```</string>
				<key>Title</key>
				<string>propiedad calculada</string>
			</dict>
		</dict>
		<key>conditional code</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Código que se ejecuta sólo cuando se cumplen condiciones específicas. Por ejemplo, los enunciados `if` y los ciclos `while` contienen código condicional que se ejecuta si o siempre y cuando una condición sea `true`.</string>
				<key>Title</key>
				<string>código condicional</string>
			</dict>
		</dict>
		<key>conform</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Se dice que un tipo cumple con un protocolo cuando proporciona su propia implementación de los requisitos de ese protocolo.</string>
				<key>Title</key>
				<string>cumplir</string>
			</dict>
		</dict>
		<key>constant</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un contenedor con nombre que almacena un valor que no se puede cambiar.</string>
				<key>Title</key>
				<string>constante</string>
			</dict>
		</dict>
		<key>container</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un contenedor, también conocido como una [visualización superior](glossary://parent%20view), es una visualización que contiene otras visualizaciones en su interior.</string>
				<key>Title</key>
				<string>contenedor</string>
			</dict>
		</dict>
		<key>coordinates</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto de números que determina de manera única una posición en un espacio. Por ejemplo, (100, -200) son coordenadas de un punto en un espacio 2D, en donde la coordenada x es 100 y la coordenada y es -200.</string>
				<key>Title</key>
				<string>coordenadas</string>
			</dict>
		</dict>
		<key>data</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Información que se procesa o almacena en una computadora y es distinta del código que actúa sobre ella.</string>
				<key>Title</key>
				<string>datos</string>
			</dict>
		</dict>
		<key>debug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Encontrar y corregir errores en el código que evitan que una aplicación se ejecute correctamente. </string>
				<key>Title</key>
				<string>depurar</string>
			</dict>
		</dict>
		<key>declaration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una porción de código que crea algo nuevo en tu aplicación, tal como una función, variable o un tipo personalizado. Por ejemplo, `let planet = "Earth"` declara una nueva constante, `planet` y le da un valor `"Earth"`.</string>
				<key>Title</key>
				<string>declaración</string>
			</dict>
		</dict>
		<key>decomposition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El proceso de desglosar un problema grande en partes más pequeñas y manejables.</string>
				<key>Title</key>
				<string>descomposición</string>
			</dict>
		</dict>
		<key>decrement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Disminuye un número por su valor entero, comúnmente 1.</string>
				<key>Title</key>
				<string>disminución</string>
			</dict>
		</dict>
		<key>define</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Proporcionar el comportamiento o valor explícito de una pieza de código nueva, como una función, variable o tipo personalizado. Por ejemplo, para definir una función debes proporcionarle un conjunto de comandos dentro de ella para indicarle qué hacer.</string>
				<key>Title</key>
				<string>definir</string>
			</dict>
		</dict>
		<key>dot notation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una forma de sintaxis que se usa para acceder a propiedades o llamar métodos de una instancia. Por ejemplo, `expert.toggleSwitch()` llama al método `toggleSwitch()` en la instancia `expert`.</string>
				<key>Title</key>
				<string>notación de puntos</string>
			</dict>
		</dict>
		<key>efficiency</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una forma de evaluar qué tan eficiente es una parte del código basándose en la rapidez con la que puede ejecutar su propósito y su habilidad para usar tan pocos recursos, memoria y alimentación como sea posible.</string>
				<key>Title</key>
				<string>eficiencia</string>
			</dict>
		</dict>
		<key>else block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El último bloque de código en un enunciado `if`. El bloque `else` se ejecuta si todas las condiciones del enunciado `if` son `false`.</string>
				<key>Title</key>
				<string>bloque else</string>
			</dict>
		</dict>
		<key>else if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código dentro de un enunciado `if` que se usa para verificar una condición que no verifica el bloque `if` ni ningún otro bloque `else if`.</string>
				<key>Title</key>
				<string>bloque else if</string>
			</dict>
		</dict>
		<key>enumeration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un tipo que define un conjunto de valores únicos, pero relacionados, llamados *casos de enumeración*. Por ejemplo, una enumeración `Direction` define casos para cada dirección cardinal: `north`, `south`, `east` y `west`. Al asignar una enumeración a una variable o constante, siempre eliges sólo uno de sus casos. Por ejemplo, `let compassDirection: Direction = .north`.</string>
				<key>Title</key>
				<string>enumeración</string>
			</dict>
		</dict>
		<key>environment object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agrega el [contenedor de propiedades](glossary://property%20wrapper) `@EnvironmentObject` para declarar una propiedad de objeto observable proporcionada por una visualización superior o antigua. Si declaras una propiedad como un objeto de entorno, asegúrate de establecer una instancia de modelo correspondiente en una visualización antigua al llamar a su modificador `environmentObject(_:)`.</string>
				<key>Title</key>
				<string>objeto de entorno</string>
			</dict>
		</dict>
		<key>event</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una acción detectable por una aplicación de computadora. Una entrada, tal como presionar un botón o girar la pantalla, activa un evento.</string>
				<key>Title</key>
				<string>evento</string>
			</dict>
		</dict>
		<key>event handler</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una función que se llama después de que suceda un evento para que lo controle.</string>
				<key>Title</key>
				<string>controlador de eventos</string>
			</dict>
		</dict>
		<key>filtering</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Procesar datos de una colección o estructura de datos para producir un nuevo conjunto de datos.</string>
				<key>Title</key>
				<string>filtrado</string>
			</dict>
		</dict>
		<key>font</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto de caracteres de texto en un estilo, diseño, peso y tamaño específicos. A los estilos se les conoce como *tipografías* y las variaciones de este estilo conforman la *familia* de la tipografía. Por ejemplo, HelveticaNeue es una tipografía y 10-point HelveticaNeue-Bold es un tipo de letra.</string>
				<key>Title</key>
				<string>tipo de letra</string>
			</dict>
		</dict>
		<key>for loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código repetido que se ejecuta un cierto número de veces.</string>
				<key>Title</key>
				<string>ciclo for</string>
			</dict>
		</dict>
		<key>full function name</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El nombre completo de una función, que incluye los nombres de sus parámetros separados por dos puntos (`:`). Por ejemplo: `move(to:duration:)`.</string>
				<key>Title</key>
				<string>nombre de función completo</string>
			</dict>
		</dict>
		<key>function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto con nombre de [comandos](glossary://command) que se pueden ejecutar cuando sea necesario.</string>
				<key>Title</key>
				<string>función</string>
			</dict>
		</dict>
		<key>function definition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una definición de función describe lo que hace una función, lo que espera recibir y lo que devuelve cuando termina.</string>
				<key>Title</key>
				<string>definición de función</string>
			</dict>
		</dict>
		<key>global function</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una función a la cual se puede acceder desde cualquier archivo del proyecto.</string>
				<key>Title</key>
				<string>función global</string>
			</dict>
		</dict>
		<key>global variable</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una variable a la cual se puede acceder desde cualquier archivo del proyecto.</string>
				<key>Title</key>
				<string>variable global</string>
			</dict>
		</dict>
		<key>grayscale</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un intervalo de tonos grises que van del blanco al negro.</string>
				<key>Title</key>
				<string>escala de grises</string>
			</dict>
		</dict>
		<key>gyroscope</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un sensor que mide la orientación de tu dispositivo en tres dimensiones: su inclinación de adelante hacia atrás, su inclinación de izquierda a derecha, y su rotación alrededor de su centro.</string>
				<key>Title</key>
				<string>giroscopio</string>
			</dict>
		</dict>
		<key>hertz</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un hertz (Hz) es un ciclo por segundo. Cuando se aplica a vibraciones de sonido, 1 Hz es una onda de sonido por segundo. Los humanos pueden escuchar sonidos de entre 20 Hz y 16,000 Hz.</string>
				<key>Title</key>
				<string>hertz</string>
			</dict>
		</dict>
		<key>hue</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El tono de un color en la rueda de colores. Debe ser un valor `Double` (número decimal) del `0` al `1`.</string>
				<key>Title</key>
				<string>matiz</string>
			</dict>
		</dict>
		<key>if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El primer bloque de código en un enunciado `if`. El bloque `if` se ejecuta si la condición del enunciado `if` es `true`.</string>
				<key>Title</key>
				<string>bloque if</string>
			</dict>
		</dict>
		<key>if statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una estructura de código que se usa para ejecutar código según el valor de una o más condiciones. El primer bloque del código en un enunciado `if` es el bloque `if`. Un enunciado `if` también podría contener otros bloques que proporcionen verificaciones adicionales, como un bloque `else` o `else if`.</string>
				<key>Title</key>
				<string>enunciado if</string>
			</dict>
		</dict>
		<key>increment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Incrementa un número por su valor entero, comúnmente 1.</string>
				<key>Title</key>
				<string>incremento</string>
			</dict>
		</dict>
		<key>index</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un número que representa la posición de un elemento en un [arreglo](glossary://array).</string>
				<key>Title</key>
				<string>índice</string>
			</dict>
		</dict>
		<key>index out of range error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un error que ocurre al intentar acceder a un arreglo usando un índice que está fuera de los límites del arreglo. Por ejemplo, el índice `2` está fuera de los límites de este arreglo: `[17, 42]`.</string>
				<key>Title</key>
				<string>error de índice fuera de los límites</string>
			</dict>
		</dict>
		<key>initialization</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El acto de crear una nueva instancia de un tipo, que incluye establecer los valores iniciales de cualquier propiedad del tipo.</string>
				<key>Title</key>
				<string>inicialización</string>
			</dict>
		</dict>
		<key>initializer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Se llama a un inicializador para crear una nueva [instancia](glossary://instance) de un tipo. El inicializador debe establecer todos los valores iniciales de las propiedades del tipo y, en ocasiones, contiene otro código de configuración.</string>
				<key>Title</key>
				<string>inicializador</string>
			</dict>
		</dict>
		<key>inner loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código que se repite (un ciclo) que está anidado dentro de otro ciclo (exterior).</string>
				<key>Title</key>
				<string>ciclo interior</string>
			</dict>
		</dict>
		<key>instance</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un valor de un [tipo](glossary://type) en particular. Por ejemplo, en `"let motion = MotionSensor()"`, `"motion"` es una instancia del tipo `"MotionSensor"`.</string>
				<key>Title</key>
				<string>instancia</string>
			</dict>
		</dict>
		<key>iteration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El acto de repetir un proceso, como realizar la misma acción en cada elemento de un arreglo.</string>
				<key>Title</key>
				<string>iteración</string>
			</dict>
		</dict>
		<key>lag</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una disminución en la velocidad o la capacidad de respuesta de la app como resultado de las demandas de procesamiento, la potencia de procesamiento o ambas.</string>
				<key>Title</key>
				<string>demora</string>
			</dict>
		</dict>
		<key>leading edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El borde inicial, cuando se usa en referencia al contenido que está dentro de una visualización, se refiere a la posición horizontal del inicio del contenido. La posición del borde inicial depende de tus preferencias y, por lo general, está basado en tu configuración de idioma y región.
                    Por ejemplo, para los idiomas que se leen de izquierda a derecha, como el español y el inglés, el borde inicial está a la izquierda; y para los idiomas que se leen de derecha a izquierda, como árabe o hebreo, el borde está a la derecha.</string>
				<key>Title</key>
				<string>borde inicial</string>
			</dict>
		</dict>
		<key>literal</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Los literales te otorgan la habilidad de incrustar imágenes o color directamente en el código usando la biblioteca de imágenes o el selector de color. Los literales son los valores reales de los datos representados en su formato nativo directamente dentro del editor.</string>
				<key>Title</key>
				<string>literal</string>
			</dict>
		</dict>
		<key>logical AND operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo (`&amp;&amp;`) que combina dos valores booleanos en donde ambos valores deben ser verdaderos para que el código en sí sea verdadero. Por ejemplo, `a &amp;&amp; b` sólo es verdadero cuando tanto `a` como `b` son `true`.</string>
				<key>Title</key>
				<string>operador lógico AND</string>
			</dict>
		</dict>
		<key>logical NOT operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo (`!`) que invierte el valor booleano de una porción de código. Por ejemplo, si `a` es `true`, entonces `!a` es `false`.</string>
				<key>Title</key>
				<string>operador lógico NOT</string>
			</dict>
		</dict>
		<key>logical OR operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo (`||`) que combina dos valores booleanos en donde sólo un valor debe ser verdadero para que el código en sí sea verdadero. Por ejemplo, `a || b` es `true` cuando `a` o `b` sea `true` (o cuando ambos lo son).</string>
				<key>Title</key>
				<string>operador lógico OR</string>
			</dict>
		</dict>
		<key>logical operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo, como `&amp;&amp;`, `||` o `!`, que modifica o combina los valores lógicos booleanos `true` y `false`.</string>
				<key>Title</key>
				<string>operador lógico</string>
			</dict>
		</dict>
		<key>loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código que se repite un cierto número de veces (por ejemplo, un ciclo `for`) o hasta que se cumpla una condición (por ejemplo, un ciclo `while`).</string>
				<key>Title</key>
				<string>ciclo</string>
			</dict>
		</dict>
		<key>memory</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La parte de una computadora que almacena el código de una aplicación y los datos que utiliza, ya sea de forma temporal o permanente.</string>
				<key>Title</key>
				<string>memoria</string>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una función, o conjunto de comandos, que está definida dentro de un [tipo](glossary://type).</string>
				<key>Title</key>
				<string>método</string>
			</dict>
		</dict>
		<key>modifier</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En SwiftUI, un modificador es un [método](glossary://method) al que se llama en una visualización para cambiar su aspecto o comportamiento. Para facilitar la lectura de los modificadores, cada uno se coloca en una línea individual debajo de la [instancia](glossary://instance) de la visualización.</string>
				<key>Title</key>
				<string>modificador</string>
			</dict>
		</dict>
		<key>modulo operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo (`%`) que devuelve el valor que queda después de dividir un número entre otro. Por ejemplo, `17 % 5` devuelve `2`.</string>
				<key>Title</key>
				<string>operador de módulo</string>
			</dict>
		</dict>
		<key>navigation bar</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una interfaz de navegación te permite seleccionar una opción en cada pantalla hasta llegar a un destino. Para llegar a un destino distinto, debes regresar o volver a empezar desde el principio para seleccionar opciones distintas. La barra de navegación de la parte superior de la pantalla muestra un titulo que te ayuda a recordar dónde te encuentras, y ofrece un botón para regresar a la pantalla anterior.</string>
				<key>Title</key>
				<string>barra de navegación</string>
			</dict>
		</dict>
		<key>nest</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Colocar un bloque de código que se repite (un ciclo) dentro de otro.</string>
				<key>Title</key>
				<string>anidar</string>
			</dict>
		</dict>
		<key>observable object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Cuando una clase [cumple](glossary://conform) con el protocolo `ObservableObject`, cualquier cambio que se realice a sus valores publicados ocasionará que todas las visualizaciones que utilicen esos valores se actualicen de forma automática para reflejar los cambios.</string>
				<key>Title</key>
				<string>objeto observable</string>
			</dict>
		</dict>
		<key>observed object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Si una clase [cumple](glossary://conform) con el protocolo `ObservableObject`, cambiar uno de sus valores publicados ocasionará que todas las visualizaciones que utilicen ese valor se actualicen de forma automática para reflejar los cambios.</string>
				<key>Title</key>
				<string>objeto observable</string>
			</dict>
		</dict>
		<key>observer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Con respecto a un [objeto observable](glossary://observable%20object), un observador es cualquier visualización u objeto que usa los datos del objeto observable. Cuando los datos del objeto observable cambian, SwiftUI reconoce el cambio y le indica a los observadores que se deben actualizar.</string>
				<key>Title</key>
				<string>observador</string>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un símbolo, como `+`, `-` o `&amp;&amp;`, que representa una acción que se realiza en uno o más valores. Por ejemplo, en `1 + 2`, el operador de adición (`+`) suma los números `1` y `2`.</string>
				<key>Title</key>
				<string>operador</string>
			</dict>
		</dict>
		<key>outer loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código que se repite (un ciclo) que contiene otro ciclo (interior).</string>
				<key>Title</key>
				<string>ciclo exterior</string>
			</dict>
		</dict>
		<key>parameter</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El nombre de un valor de entrada de una función, que se usa en la definición de la función. Por ejemplo, en `move(distance: Int)`, `distance` es un parámetro que toma un valor del tipo Int (entero).</string>
				<key>Title</key>
				<string>parámetro</string>
			</dict>
		</dict>
		<key>parent view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La visualización de contenedor para una o más [visualizaciones secundarias](glossary://child%20view).</string>
				<key>Title</key>
				<string>visualización superior</string>
			</dict>
		</dict>
		<key>pattern</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto de circunstancias o datos que se repite.</string>
				<key>Title</key>
				<string>patrón</string>
			</dict>
		</dict>
		<key>pitch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En música, el tono de una nota indica qué tan alta o baja es una nota basándose principalmente en la frecuencia de la vibración. El tono de una nota se puede medir en [hertz](glossary://hertz). Un tono alto (~ 2000 Hz) puede sonar como un silbido; mientras que uno bajo (~ 40 Hz) puede sonar como el mugido de una vaca.</string>
				<key>Title</key>
				<string>tono</string>
			</dict>
		</dict>
		<key>primitive</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Con respecto a una estructura de programación, como SwiftUI, una primitiva es un bloque de construcción proporcionado por la estructura que sirve para crear comportamientos más complejos o [interfaces](glossary://user%20interface).
</string>
				<key>Title</key>
				<string>primitiva</string>
			</dict>
		</dict>
		<key>primitive view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una [visualización](glossary://view) proporcionada por la estructura de [SwiftUI](glossary://SwiftUI), tal como una visualización de botón (`Button`), texto (`Text`) o imagen (`Image`). Las visualizaciones primitivas se usan como bloques de construcción para crear [visualizaciones compuestas](glossary://composed%20view) más complejas en la [interfaz de usuario](glossary://user%20interface).</string>
				<key>Title</key>
				<string>visualización primitiva</string>
			</dict>
		</dict>
		<key>private</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La palabra clave `private` hace que el código sólo esté disponible en ese archivo fuente específico.
- callout(Ejemplo):
`private class MyApp: App { }`</string>
				<key>Title</key>
				<string>private</string>
			</dict>
		</dict>
		<key>property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una variable (un contenedor con nombre que almacena un valor) definida dentro de un tipo.</string>
				<key>Title</key>
				<string>propiedad</string>
			</dict>
		</dict>
		<key>property wrapper</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un contenedor de propiedades ofrece una forma sencilla de aplicar un patrón de comportamiento común a una propiedad. Este contenedor constituye una forma de anotar la propiedad que define cómo se almacenará o calculará al leerse.   Por ejemplo, el contenedor de propiedades `@State` le indica a SwiftUI que debe administrar el almacenamiento de un valor, y cada vez que el valor cambie, debe actualizar cualquier parte de la visualización que lo utilice.</string>
				<key>Title</key>
				<string>contenedor de propiedades</string>
			</dict>
		</dict>
		<key>protocol</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un conjunto de requisitos, como métodos y propiedades, que puede adoptar (o seguir) un tipo, tal como una clase, estructura o enumeración.  Cuando un tipo adopta un protocolo, el tipo proporciona su propia implementación de los requisitos del protocolo, y se dice que cumple con dicho protocolo.</string>
				<key>Title</key>
				<string>protocolo</string>
			</dict>
		</dict>
		<key>pseudocode</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una descripción fácil de leer de un algoritmo, usualmente escrita usando una mezcla de código y lenguaje normal.</string>
				<key>Title</key>
				<string>pseudocódigo</string>
			</dict>
		</dict>
		<key>public</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La palabra clave `public` hace que el código esté disponible en cualquier archivo de tu proyecto.
                        
- callout(Ejemplo):
`public func decorateWithSticker(space: Space) { }`
                    </string>
				<key>Title</key>
				<string>public</string>
			</dict>
		</dict>
		<key>published value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agrega el [contenedor de propiedades](glossary://property%20wrapper) `@Published` para declarar una propiedad que notifique a todos los [observadores](glossary://observer) cuando su valor esté por cambiar. Cuando el valor cambie, SwiftUI actualiza todas las visualizaciones que utilicen sus datos.</string>
				<key>Title</key>
				<string>valor publicado</string>
			</dict>
		</dict>
		<key>return type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Cuando defines una función, puedes definir de forma opcional un tipo de valor que la función devuelva como salida cuando haya terminado; a esto se le conoce como tipo de retorno.</string>
				<key>Title</key>
				<string>tipo de retorno</string>
			</dict>
		</dict>
		<key>reusability</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una característica del código que permite que se use en distintas situaciones dentro de una aplicación.</string>
				<key>Title</key>
				<string>reusabilidad</string>
			</dict>
		</dict>
		<key>root view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una visualización en la que se colocan todas las otras visualizaciones. Se le conoce también como [visualización principal](glossary://top-level%20view), y está en la parte superior de la [jerarquía de visualizaciones](glossary://view%20hierarchy). Además, funge como la [visualización superior](glossary://parent%20view) de todas las [visualizaciones secundarias](glossary://child%20view) de la jerarquía.</string>
				<key>Title</key>
				<string>visualización raíz</string>
			</dict>
		</dict>
		<key>saturation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La intensidad del matiz, de un tono gris a un color vívido. Los datos de saturación deben ser un valor `Double` (número decimal) del `0` al `1`.</string>
				<key>Title</key>
				<string>saturación</string>
			</dict>
		</dict>
		<key>sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un sensor es un dispositivo que detecta eventos —como un cambio en el calor, la luz, el sonido o el movimiento— y devuelve un valor.</string>
				<key>Title</key>
				<string>sensor</string>
			</dict>
		</dict>
		<key>source of truth</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En el ámbito de la creación de apps, se trata de una ubicación única en donde se modifican todos los datos. Todas las demás conexiones a estos datos se hacen solamente mediante referencia, lo que evita la duplicación de su información en otras ubicaciones.</string>
				<key>Title</key>
				<string>fuente única de información</string>
			</dict>
		</dict>
		<key>speech synthesis</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Generación computarizada de sonido que se asemeja al habla humana, comúnmente generada a partir de texto.</string>
				<key>Title</key>
				<string>síntesis del habla</string>
			</dict>
		</dict>
		<key>state</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La información almacenada de una variable, aplicación o sistema en un momento dado.</string>
				<key>Title</key>
				<string>estado</string>
			</dict>
		</dict>
		<key>state object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agrega el [contenedor de propiedades](glossary://property%20wrapper) `@StateObject` para declarar un objeto de estado y proporcionar un valor inicial que cumpla con el [protocolo](glossary://protocol) `ObservableObject`. SwiftUI administra el almacenamiento del objeto de estado, y actualiza las subvisualizaciones que usen el valor cada vez que cambien sus valores publicados.</string>
				<key>Title</key>
				<string>objeto de estado</string>
			</dict>
		</dict>
		<key>state value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Agrega `@State` antes de una variable para indicarle a SwiftUI que administre el almacenamiento de un valor. Cuando el valor cambie, SwiftUI actualizará cualquier parte de la visualización que lo use.</string>
				<key>Title</key>
				<string>valor de estado</string>
			</dict>
		</dict>
		<key>statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una estructura, como un ciclo o un enunciado `if`, que organiza código en una aplicación.</string>
				<key>Title</key>
				<string>enunciado</string>
			</dict>
		</dict>
		<key>string component</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una parte, o substring, de un string después de que el string se haya dividido en partes usando un separador. Por ejemplo, si el string `"dog+cat+fish"` está dividido por el separador `"+"`, los componentes resultantes serían los strings `"dog"`, `"cat"` y `"fish"`.</string>
				<key>Title</key>
				<string>componente de string</string>
			</dict>
		</dict>
		<key>string concatenation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La operación de unir strings al agregar uno al final de otro. Por ejemplo, la concatenación `"foot"` y `"ball"` es `"football"`.</string>
				<key>Title</key>
				<string>concatenación de strings</string>
			</dict>
		</dict>
		<key>string interpolation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El uso de constantes, variables o expresiones de código dentro de un string más largo que se sustituyen con sus valores actuales cuando se evalúa el string. Por ejemplo, en el string `"Katy se comió un \(fruit)"`, si `fruit` es una variable con el valor `"durazno"`, entonces `"durazno"` reemplaza a `\(fruit)` cuando el string se evalúa, por lo que se convierte en `"Katy se comió un durazno"`.</string>
				<key>Title</key>
				<string>interpolación de strings</string>
			</dict>
		</dict>
		<key>syntax</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Las reglas para escribir código que una computadora pueda entender y ejecutar.</string>
				<key>Title</key>
				<string>sintaxis</string>
			</dict>
		</dict>
		<key>top-level view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una visualización en la que se colocan todas las otras visualizaciones. Se le conoce también como [visualización raíz](glossary://root%20view), y está en la parte superior de la [jerarquía de visualizaciones](glossary://view%20hierarchy). Además, funge como la [visualización superior](glossary://parent%20view) de todas las [visualizaciones secundarias](glossary://child%20view) de la jerarquía.</string>
				<key>Title</key>
				<string>visualización principal</string>
			</dict>
		</dict>
		<key>trailing edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El borde final, cuando se usa en referencia al contenido que está dentro de una visualización, se refiere a la posición horizontal del final del contenido. La posición del borde final depende de tus preferencias y, por lo general, está basado en tu configuración de idioma y región.
                    Por ejemplo, para los idiomas que se leen de izquierda a derecha, como el español y el inglés, el borde final está a la derecha; y para los idiomas que se leen de derecha a izquierda, como árabe o hebreo, el borde está a la izquierda.</string>
				<key>Title</key>
				<string>borde inicial</string>
			</dict>
		</dict>
		<key>type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una agrupación con nombre de propiedades (las características) y métodos (los comportamientos) de una clase de datos.</string>
				<key>Title</key>
				<string>tipo</string>
			</dict>
		</dict>
		<key>typography</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El arte y la técnica de disponer los caracteres de tal forma que el lenguaje escrito sea legible y atractivo cuando se muestra.</string>
				<key>Title</key>
				<string>tipografía</string>
			</dict>
		</dict>
		<key>user input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Información que una aplicación obtiene mediante la interacción con un usuario, por ejemplo, tocar la pantalla, ingresar texto con el teclado o hablar a través del micrófono. 
</string>
				<key>Title</key>
				<string>entrada del usuario</string>
			</dict>
		</dict>
		<key>user interface</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El medio por el cual un usuario controla una app. También se le llama UI (por sus siglas en inglés), y es un término que se suele usar para referirse a la parte visual de una app con la que los usuarios interactúan, con elementos tales como imágenes, texto, botones, reguladores, visualizaciones de desplazamiento y más.</string>
				<key>Title</key>
				<string>interfaz de usuario</string>
			</dict>
		</dict>
		<key>variable</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un contenedor con nombre que almacena un valor que se puede cambiar.</string>
				<key>Title</key>
				<string>variable</string>
			</dict>
		</dict>
		<key>velocity</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La velocidad de un objeto en una dirección específica.</string>
				<key>Title</key>
				<string>velocidad</string>
			</dict>
		</dict>
		<key>view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una visualización es el bloque de construcción de la interfaz de usuario de tu app, y representa cualquier elemento visual que [cumple](glossary://conform) con el [protocolo](glossary://protocol) `View`.

Algunos ejemplos de visualizaciones en SwiftUI incluyen visualizaciones de texto o de imagen, reguladores, cuadrículas, botones y figuras.</string>
				<key>Title</key>
				<string>visualización</string>
			</dict>
		</dict>
		<key>view hierarchy</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Una estructura que define la disposición de las visualizaciones en relación con otras visualizaciones, haciendo referencia a una instancia de visualización principal que está en la parte superior de la jerarquía. La visualización principal puede contener muchas subvisualizaciones, cada una de las cuales puede contener sus propias subvisualizaciones, y así sucesivamente.</string>
				<key>Title</key>
				<string>jerarquía de visualizaciones</string>
			</dict>
		</dict>
		<key>volume</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>El volumen es la intensidad del sonido detectado por el [sensor](glossary://sensor). Oscila entre 0 y 1.</string>
				<key>Title</key>
				<string>volumen</string>
			</dict>
		</dict>
		<key>while loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bloque de código que se ejecuta mientras una condición dada sea verdadera. Cuando la condición se vuelva falsa, el ciclo dejará de ejecutarse.</string>
				<key>Title</key>
				<string>ciclo while</string>
			</dict>
		</dict>
		<key>wireframe</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un bosquejo de un elemento, como una gema, interruptor o bloque, que está en el mundo del rompecabezas. Un esquema de página se usa para indicar la posibilidad de que el elemento pudiera aparecer de forma aleatoria cada vez que se ejecute el rompecabezas.</string>
				<key>Title</key>
				<string>esquema de página</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
