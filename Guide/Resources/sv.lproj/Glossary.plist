<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Alpha</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Alfa, eller *alfakanal*, påvisar hur opak en färg är längs ett intervall från `0` (helt transparent) till `1` (helt opak). Alfainformationen är ett tal av typen Double (decimaltal) i intervallet från 0 till 1.</string>
				<key>Title</key>
				<string>alfa</string>
			</dict>
		</dict>
		<key>Boolean</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ vars värde är antingen `true` eller `false`. Exempelvis ger `9 &lt; 7` det booleska värdet `false` eftersom `9` inte är mindre än `7`.</string>
				<key>Title</key>
				<string>Boolesk</string>
			</dict>
		</dict>
		<key>Double</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ som lagrar tal med en decimalkomponent, exempelvis 3.14. Obs! Swift Playgrounds använder en punkt (.) istället för ett komma (,) som decimaltecken.</string>
				<key>Title</key>
				<string>Double</string>
			</dict>
		</dict>
		<key>Int</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ som lagrar ett heltal, dvs. ett tal utan decimal, som `10` eller `-42`. </string>
				<key>Title</key>
				<string>Int</string>
			</dict>
		</dict>
		<key>String</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ som lagrar en serie tecken som en sträng, exempelvis `"hej världen"` eller `"dansande katter"`.</string>
				<key>Title</key>
				<string>String</string>
			</dict>
		</dict>
		<key>Swift</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Apples programmeringsspråk som används till att skriva appar för iPhone, iPad, Mac, Apple Watch och Apple TV.</string>
				<key>Title</key>
				<string>Swift</string>
			</dict>
		</dict>
		<key>SwiftUI</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>SwiftUI är ett modernt sätt att deklarera användargränssnitt för alla Apple-plattformar. Det tillhandahåller vyer, reglage och layoutstrukturer för att deklarera appens användargränssnitt. Ramverket tillhandahåller händelsehanterare för att vidarebefordra tryck, gester och andra typer av inmatningar till appen och verktyg för att hantera dataflödet från appens modeller ned till vyerna och reglagen som användare ser och interagerar med.</string>
				<key>Title</key>
				<string>SwiftUI</string>
			</dict>
		</dict>
		<key>absolute value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Det osignerade värdet för ett tal. Exempelvis är 12 det absoluta värdet för -12, och 23.4 är det absoluta värdet för 23.4.</string>
				<key>Title</key>
				<string>absolut värde</string>
			</dict>
		</dict>
		<key>abstraction</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En förenklad version av en mer komplex sak.   En abstraktion gömmer detaljer så att det blir enklare att tänka på och kombinera olika koddelar.   Exempelvis är en [typ](glossary://type) en abstraktion som gömmer inställning, egenskaper och metoder för en instans av den typen.</string>
				<key>Title</key>
				<string>abstraktion</string>
			</dict>
		</dict>
		<key>accelerometer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En sensor som mäter enhetens acceleration i tre dimensioner: uppåt och nedåt, framåt och bakåt samt höger och vänster.</string>
				<key>Title</key>
				<string>accelerometer</string>
			</dict>
		</dict>
		<key>adopt</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>För att adoptera ett protokoll tillhandahåller en typ en uppsättning av sina egna implementeringar för protokollets krav, exempelvis dess listade metoder och egenskaper.</string>
				<key>Title</key>
				<string>adoptera</string>
			</dict>
		</dict>
		<key>algorithm</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En uppsättning steg-för-steg-anvisningar eller regler för att lösa ett problem. Exempelvis kan en lista över stegen som krävs för att göra en kopp te betraktas som en algoritm.</string>
				<key>Title</key>
				<string>algoritm</string>
			</dict>
		</dict>
		<key>append</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att lägga till i slutet av något. Du kan till exempel bifoga en sträng i slutet av en annan sträng, eller bifoga ett objekt i en array med objekt.
</string>
				<key>Title</key>
				<string>bifoga</string>
			</dict>
		</dict>
		<key>application</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Programvara, som består av kod, som gör det möjligt att utföra särskilda åtgärder. Du kan till exempel använda appen Meddelanden till att skicka och ta emot meddelanden.</string>
				<key>Title</key>
				<string>app</string>
			</dict>
		</dict>
		<key>argument</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett inmatningsvärde som överförs till en funktion för att anpassa dess beteende. I exempelvis funktionsanropet `move(distance: 3)` är talet `3` ett argument som anger hur många steg som ska flyttas.</string>
				<key>Title</key>
				<string>argument</string>
			</dict>
		</dict>
		<key>arithmetic operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol, som `+`, `-`, `*` eller `/`, som utför en grundläggande matematisk beräkning av ett eller flera tal. `42 / 7` och `17 - 5` är exempel där aritmetiska operatorer används.</string>
				<key>Title</key>
				<string>aritmetisk operator</string>
			</dict>
		</dict>
		<key>array</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En samling som lagrar en lista med objekt av samma typ i ordning. Samma objekt kan dyka upp flera gånger på olika platser. Exempelvis är `highScores = [37, 34, 29, 29, 26]` en array med [heltal](glossary://Int).</string>
				<key>Title</key>
				<string>array</string>
			</dict>
		</dict>
		<key>asset</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Resurser är bilder, ljud och andra objekt som din app använder. Du kan importera resurser till Swift Playgrounds från andra appar, exempelvis Filer och Bilder.</string>
				<key>Title</key>
				<string>resurs</string>
			</dict>
		</dict>
		<key>assignment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En åtgärd som fastställer värdet för en variabel eller konstant.</string>
				<key>Title</key>
				<string>tilldelning</string>
			</dict>
		</dict>
		<key>assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Symbolen `=` används till att ange värdet för en variabel. Exempelvis anger `greeting = "hej"` att värdet för `greeting` är `"hej"`.</string>
				<key>Title</key>
				<string>tilldelnings­operator</string>
			</dict>
		</dict>
		<key>asynchronous process</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kodblock som kan köras medan resten av appen eller programmet fortsätter att köras. Motsatsen är en synkron process, vilket blockerar program från att köras tills den är klar – en asynkron process kan köras samtidigt som resten av appkoden.</string>
				<key>Title</key>
				<string>asynkron process</string>
			</dict>
		</dict>
		<key>binding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lägg till [egenskapspaketeraren](glossary://property%20wrapper) `@Binding` för att skapa en dubbelsidig anslutning mellan en egenskap som lagrar data och en vy som visar och ändrar data. En koppling ansluter en egenskap till en sanningskälla som lagras någon annanstans istället för att lagra data direkt. 

Exempelvis kan en knapp som växlar mellan uppspelning och paus skapa en koppling till en egenskap i sin överliggande vy genom att använda egenskapspaketeraren `@Binding`.
</string>
				<key>Title</key>
				<string>koppling</string>
			</dict>
		</dict>
		<key>body</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Det är i bodyn i en [vy](glossary://view) som du tillhandahåller vyns innehåll som sammanställs av minst en [primitivvy](glossary://primitive%20view) som SwiftUI tillhandahåller eller valfria [sammanställda vyer](glossary://composed%20view) som du redan har skapat.</string>
				<key>Title</key>
				<string>body</string>
			</dict>
		</dict>
		<key>bounds</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>I en array är det här värdeintervallet som ett index för arrayen kan ha. Arrayen `[17, 42, 95]` kan till exempel ha indexvärden från 0 till 2. Gränskontroll är processen som verifierar att ett indexvärde befinner sig inom gränserna för en array.</string>
				<key>Title</key>
				<string>gränser</string>
			</dict>
		</dict>
		<key>brightness</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Mängden ljus som kommer in i kameran i intervallet från `0` (inget ljus) till `1` (fullt ljus). Ljusstyrkan är ett tal av typen [Double](glossary://double) (ett decimaltal) från `0` till `1`.</string>
				<key>Title</key>
				<string>ljusstyrka</string>
			</dict>
		</dict>
		<key>bug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kodfel som förhindrar att ett program körs som förväntat. 
</string>
				<key>Title</key>
				<string>bugg</string>
			</dict>
		</dict>
		<key>bundle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En representation av koden och tillgångar som lagras i en paketkatalog på skiva. Paket organiserar tillgångarna de innehåller i väldefinierade underkataloger och paketstrukturer varierar beroende på plattform och typ av paket. Genom att använda ett paketobjekt kan du komma åt paketets tillgångar utan att känna till hur paketet är strukturerat.</string>
				<key>Title</key>
				<string>paket</string>
			</dict>
		</dict>
		<key>call</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att anropa en funktion i kod innebär att säga åt den funktionen att köras och utföra åtgärderna som är definierade inuti den.</string>
				<key>Title</key>
				<string>anrop</string>
			</dict>
		</dict>
		<key>child view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En vy som finns inuti en [överliggande vy](glossary://parent%20view). En överliggande vy kan innehålla hur många underliggande vyer som helst och var och av dessa kan innehålla sina egna underliggande vyer och så vidare. En vy och alla dess ättlingar utgör en [vyhierarki](glossary://view%20hierarchy).</string>
				<key>Title</key>
				<string>underliggande vy</string>
			</dict>
		</dict>
		<key>class</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En klass är en behållare för kod som fungerar som en mall när du vill skapa flera kopior av samma typ. Precis som en mall kan definiera funktioner och beteenden hos ett objekt, exempelvis en cykel, definierar en klass dessa som [egenskaper](glossary://property) och [metoder](glossary://method).

När du skapar en ny kopia, eller [instans](glossary://instance), av en klass innehåller den instansen alla egenskaper och metoder i mallen. De enskilda instansernas värden kan dock ändras fristående, vilket innebär att du kan anpassa hur enskilda kopior beter sig. En cykelklass kan exempelvis ha en färgegenskap så att du kan skapa både röda och blå cyklar.</string>
				<key>Title</key>
				<string>klass</string>
			</dict>
		</dict>
		<key>closure</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Stängningar är [funktioner](glossary://function) som körs på plats, utan att det behövs ett namn.
					
```
scene.setOnStartHandler {
    // Stängningens body
}
```
                    
Stängningar kan registrera och lagra referenser till valfria konstanter och variabler från den kontext där de definieras. Det kallas för att stänga över de konstanterna och variablerna.</string>
				<key>Title</key>
				<string>stängning</string>
			</dict>
		</dict>
		<key>code comment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En kodkommentar är en metod som programmerare använder till att dokumentera sin kod.   Du startar en enradig kommentar med två snedstreck följda av ett mellanslag, exempelvis "// Det här är min kommentar.".   När du kör koden körs inte kodkommentarerna.</string>
				<key>Title</key>
				<string>kodkommentar</string>
			</dict>
		</dict>
		<key>code expression</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En bit kod som kan utvärderas för att returnera ett värde. Om exempelvis `months` är en array som innehåller 12 objekt kommer koduttrycket `months.count - 1` att returnera värdet `11`.</string>
				<key>Title</key>
				<string>koduttryck</string>
			</dict>
		</dict>
		<key>coding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att sammanställa kommandon, kodstrukturer och algoritmer för att skapa en app.</string>
				<key>Title</key>
				<string>programmering</string>
			</dict>
		</dict>
		<key>collection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En datastruktur, som en array eller ordbok, används till att lagra många datadelar.</string>
				<key>Title</key>
				<string>samling</string>
			</dict>
		</dict>
		<key>command</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Kod som säger åt en app att utföra en viss åtgärd. </string>
				<key>Title</key>
				<string>kommando</string>
			</dict>
		</dict>
		<key>comment out</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Du kan förhindra att en kodrad körs genom att omvandla den till en [kodkommentar](glossary://code%20comment). Du gör det genom att lägga till `//` framför en valfri kodrad. Exempelvis:
                
`// level.run()`</string>
				<key>Title</key>
				<string>kommentera ut</string>
			</dict>
		</dict>
		<key>comparison operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol, som `==`, `!=`, `&lt;`, `&gt;`, `&lt;=` eller `&gt;=`, som används till att jämföra två värden. En jämförelseoperator kan användas i ett villkor i ett `if`-uttryck eller en `while`-loop för att ge ett booleskt värde som visar om en jämförelse är `true`. Exempelvis `6 &gt; 8` jämför `6` med `8` och ger `false`.</string>
				<key>Title</key>
				<string>jämförelse­operator</string>
			</dict>
		</dict>
		<key>compiler error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Kompilerarfel beror på felaktigheter i koden. Du ser fel som en röd punkt i den vänstra marginalen och i verktygsfältet.</string>
				<key>Title</key>
				<string>kompilerarfel</string>
			</dict>
		</dict>
		<key>composed view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En [vy](glossary://view) skapas genom att kombinera en eller flera [primitiver](glossary://primitive%20view) eller sammanställda vyer.
</string>
				<key>Title</key>
				<string>sammanställd vy</string>
			</dict>
		</dict>
		<key>composition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Processen att kombinera små delar av en app för att bilda större delar som är enklare att arbeta med och förstå.</string>
				<key>Title</key>
				<string>sammanställning</string>
			</dict>
		</dict>
		<key>compound assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En operator som kombinerar tilldelning (anger värdet för en variabel) med en annan åtgärd, exempelvis addition eller subtraktion. Om exempelvis det aktuella värdet för `a` är `1` och du använder `a += 3` läggs `3` ihop med `1` och summan tilldelas till `a` så att värdet på `a` nu är `4`.</string>
				<key>Title</key>
				<string>sammansatt tilldelnings­operator</string>
			</dict>
		</dict>
		<key>computed property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Istället för att lagra ett värde direkt kalkylerar en beräknad egenskap ett värde som bygger på aktuell status för andra relaterade värden när de hämtas.

I exemplet nedan är `area` en beräknad egenskap medan `width` och `height` är lagrade egenskaper:

```
struct RectangleCalculator { 
    var width = 10.0
    var height = 10.0
    
    var area : Double { 
        return width * height
    }
} 
```</string>
				<key>Title</key>
				<string>beräknad egenskap</string>
			</dict>
		</dict>
		<key>conditional code</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Kod som endast körs när särskilda villkor uppfylls. Exempelvis innehåller `if`-uttryck och `while`-loopar villkorlig kod som bara körs om eller medan ett villkor är `true`.</string>
				<key>Title</key>
				<string>villkorlig kod</string>
			</dict>
		</dict>
		<key>conform</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ sägs överensstämma med ett protokoll när den tillhandahåller sin egen implementering av det protokollets krav.</string>
				<key>Title</key>
				<string>överensstämma</string>
			</dict>
		</dict>
		<key>constant</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En namngiven behållare som lagrar ett värde som inte kan ändras.</string>
				<key>Title</key>
				<string>konstant</string>
			</dict>
		</dict>
		<key>container</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En behållare, som även kallas för en [överliggande vy](glossary://parent%20view), är en vy som innehåller alla andra vyer inuti sig.</string>
				<key>Title</key>
				<string>behållare,container</string>
			</dict>
		</dict>
		<key>coordinates</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En uppsättning tal som fastställer en position i rymden. Till exempel är (100, -200) koordinaterna för en punkt i en 2D-rymd där x-koordinaten är 100 och y-koordinaten är -200.</string>
				<key>Title</key>
				<string>koordinater</string>
			</dict>
		</dict>
		<key>data</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Information som bearbetas eller lagras av en dator och skiljer sig från koden som reagerar på den.</string>
				<key>Title</key>
				<string>data</string>
			</dict>
		</dict>
		<key>debug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att hitta och fixa fel i kod som förhindrar att ett program körs som det ska. </string>
				<key>Title</key>
				<string>felsök</string>
			</dict>
		</dict>
		<key>declaration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En bit kod som skapar något nytt i ditt program, t.ex. en funktion, variabel eller anpassad typ. Exempelvis deklarerar `let planet = "Earth"` en ny konstant (`planet`) och ger den värdet `"Earth"`.</string>
				<key>Title</key>
				<string>deklaration</string>
			</dict>
		</dict>
		<key>decomposition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Processen att dela upp ett stort problem i mindre, mer lätthanterliga delar.</string>
				<key>Title</key>
				<string>uppdelning</string>
			</dict>
		</dict>
		<key>decrement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att minska ett tal med ett heltalsvärde, ofta med 1.</string>
				<key>Title</key>
				<string>minska</string>
			</dict>
		</dict>
		<key>define</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att tillhandahålla det explicita värdet eller beteendet hos en nyskapad bit kod, exempelvis en funktion, variabel eller anpassad typ. Du kan t.ex. definiera en funktion genom att ange en uppsättning kommandon inuti funktionen som talar om vad den ska göra.</string>
				<key>Title</key>
				<string>definiera</string>
			</dict>
		</dict>
		<key>dot notation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ av syntax som används till att komma åt egenskaper eller anropa metoderna i en instans. Exempelvis anropar `expert.toggleSwitch()` metoden `toggleSwitch()` i instansen `expert`.</string>
				<key>Title</key>
				<string>punktnotation</string>
			</dict>
		</dict>
		<key>efficiency</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett mått på hur bra ett kodstycke är på att utföra sitt avsedda syfte snabbt, samtidigt som så få resurser (som minne eller ström) som möjligt används.</string>
				<key>Title</key>
				<string>effektivitet</string>
			</dict>
		</dict>
		<key>else block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Det sista kodblocket i ett `if`-uttryck. `else`-blocket körs om alla villkor i `if`-uttrycket är `false`.</string>
				<key>Title</key>
				<string>else-block</string>
			</dict>
		</dict>
		<key>else if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kodblock i ett `if`-uttryck som används till att kontrollera ett villkor som inte kontrolleras av `if`-blocket eller några andra `else if`-block.</string>
				<key>Title</key>
				<string>else if-block</string>
			</dict>
		</dict>
		<key>enumeration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En typ som definierar en uppsättning unika men närliggande värden som kallas för *uppräkningsfall*. Exempelvis definierar `Direction` uppräkningsfall för varje väderstreck: `north`, `south`, `east` och `west`. När du tilldelar en uppräkning till en variabel eller konstant väljer du alltid bara ett av dess fall, exempelvis `let compassDirection: Direction = .north`.</string>
				<key>Title</key>
				<string>uppräkning</string>
			</dict>
		</dict>
		<key>environment object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lägg till [egenskapspaketeraren](glossary://property%20wrapper) `@EnvironmentObject` för att deklarera en observerbar objektegenskap som tillhandahålls av en överliggande eller ärvd vy. Om du deklarerar en egenskap som ett miljöobjekt ska du se till att ange en motsvarande modellinstans av en ärvd vy genom att anropa dess modifierare `environmentObject(_:)`.</string>
				<key>Title</key>
				<string>miljöobjekt</string>
			</dict>
		</dict>
		<key>event</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En åtgärd som kan upptäckas av ett datorprogram. Inmatning, som att trycka på en knapp eller vrida på skärmen, utlöser en händelse.</string>
				<key>Title</key>
				<string>händelse</string>
			</dict>
		</dict>
		<key>event handler</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En funktion som anropas när en händelse har inträffat för att hantera händelsen.</string>
				<key>Title</key>
				<string>händelse­hanterare</string>
			</dict>
		</dict>
		<key>filtering</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Bearbeta data i en samling eller datastruktur för att skapa en ny uppsättning data.</string>
				<key>Title</key>
				<string>filtrering</string>
			</dict>
		</dict>
		<key>font</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En uppsättning texttecken med en specifik designstil, vikt och storlek. Ett typsnitts designstil kallas för *teckensnitt*, och variationer av den här designen bildar en *teckensnittsfamilj*. HelveticaNeue är exempelvis ett teckensnitt och 10-punkters HelveticaNeue-Bold är ett typsnitt.</string>
				<key>Title</key>
				<string>typsnitt</string>
			</dict>
		</dict>
		<key>for loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett block med upprepad kod som körs ett visst antal gånger.</string>
				<key>Title</key>
				<string>for-loop</string>
			</dict>
		</dict>
		<key>full function name</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Det fullständiga namnet för en funktion innehåller dess parameternamn separerade med kolon (`:`), exempelvis `move(to:duration:)`.</string>
				<key>Title</key>
				<string>fullständigt funktionsnamn</string>
			</dict>
		</dict>
		<key>function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En namngiven uppsättning [kommandon](glossary://command) som kan köras vid behov.</string>
				<key>Title</key>
				<string>funktion</string>
			</dict>
		</dict>
		<key>function definition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En funktionsdefinition beskriver vad en funktion gör, vad den förväntar sig att ta emot och vad den returnerar när det är gjort.</string>
				<key>Title</key>
				<string>funktionsdefinition</string>
			</dict>
		</dict>
		<key>global function</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En funktion som är tillgänglig från alla filer i projektet.</string>
				<key>Title</key>
				<string>global funktion</string>
			</dict>
		</dict>
		<key>global variable</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En variabel som är tillgänglig från alla filer i projektet.</string>
				<key>Title</key>
				<string>global variabel</string>
			</dict>
		</dict>
		<key>grayscale</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett intervall grå nyanser från vitt till svart.</string>
				<key>Title</key>
				<string>gråskala</string>
			</dict>
		</dict>
		<key>gyroscope</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En sensor som mäter enhetens riktning i tre dimensioner: lutningen från framsidan till baksidan, lutningen från vänster till höger och dess rotation runt dess mittpunkt.</string>
				<key>Title</key>
				<string>gyroskop</string>
			</dict>
		</dict>
		<key>hertz</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Hertz (Hz) är en cykel per sekund. När det gäller ljudvibrationer är 1 Hz lika med en ljudvåg per sekund. Människor kan höra ljud mellan 20 Hz och 16 000 Hz.</string>
				<key>Title</key>
				<string>hertz</string>
			</dict>
		</dict>
		<key>hue</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Tonen för en färg på färghjulet. Det här är en Double (ett decimaltal) i intervallet från `0` till `1`.</string>
				<key>Title</key>
				<string>nyans</string>
			</dict>
		</dict>
		<key>if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Det första kodblocket i ett `if`-uttryck. `if`-blocket körs om villkoret i `if`-uttrycket är `true`.</string>
				<key>Title</key>
				<string>if-block</string>
			</dict>
		</dict>
		<key>if statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En kodstruktur som används till att köra kod baserat på ett eller flera villkor. Det första kodblocket i ett `if`-uttryck är `if`-blocket. Ett `if`-uttryck kan också innehålla andra block med ytterligare kontroller, t.ex. ett `else`-block och `else if`-block.</string>
				<key>Title</key>
				<string>if-uttryck</string>
			</dict>
		</dict>
		<key>increment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ökar ett tal med ett heltalsvärde, ofta med 1.</string>
				<key>Title</key>
				<string>öka</string>
			</dict>
		</dict>
		<key>index</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett numeriskt värde som representerar placeringen av ett objekt i en [array](glossary://array).</string>
				<key>Title</key>
				<string>index</string>
			</dict>
		</dict>
		<key>index out of range error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett fel som orsakas av att försöka använda arrayen med ett index som ligger utanför arrayens intervall. Indexet `2` ligger exempelvis utanför intervallet för följande array: `[17, 42]`.</string>
				<key>Title</key>
				<string>index out of range-fel</string>
			</dict>
		</dict>
		<key>initialization</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att skapa en ny instans av en typ, vilket omfattar att ange inledande värden för egenskaper hos typen.</string>
				<key>Title</key>
				<string>initiering</string>
			</dict>
		</dict>
		<key>initializer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En initierare anropas för att skapa en ny [instans](glossary://instance) av en typ. Initieraren måste ställa in alla inledande värden för typens egenskaper och innehåller ofta annan inställningskod.</string>
				<key>Title</key>
				<string>initierare</string>
			</dict>
		</dict>
		<key>inner loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett upprepande kodblock (en loop) som är nästlat inuti en annan (yttre) loop.</string>
				<key>Title</key>
				<string>innerloop</string>
			</dict>
		</dict>
		<key>instance</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett värde för en viss [typ](glossary://type). I exempelvis `let motion = MotionSensor()` är `motion` en instans av typen `MotionSensor`.</string>
				<key>Title</key>
				<string>instans</string>
			</dict>
		</dict>
		<key>iteration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att upprepa en process, exempelvis att utföra samma åtgärd på varje objekt i en array.</string>
				<key>Title</key>
				<string>iteration</string>
			</dict>
		</dict>
		<key>lag</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En minskning av appens hastighet eller svarstider som ett resultat av bearbetningsbehov, bearbetningskraft eller båda.</string>
				<key>Title</key>
				<string>lagg</string>
			</dict>
		</dict>
		<key>leading edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Den ledande kanten, när den används till att referera till innehåll inuti en vy, refererar till den horisontella positionen för starten av innehållet. Positionen för den ledande kanten beror på dina inställningar och baserar vanligtvis på dina lands- och språkinställningar.
                    Exempelvis är den ledande kanten till vänster för språk som läses från vänster till höger, som engelska eller svenska. Språk som läses från höger till vänster, som arabiska eller hebreiska, har den ledande kanten till höger.</string>
				<key>Title</key>
				<string>ledande kant</string>
			</dict>
		</dict>
		<key>literal</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Litteraler gör det möjligt att bädda in bilder och färg direkt i koden med hjälp av bildbiblioteket eller färgväljaren. Litteraler är de faktiska värdena hos dina data som representeras i ursprungligt format direkt inuti redigeraren.</string>
				<key>Title</key>
				<string>litteral</string>
			</dict>
		</dict>
		<key>logical AND operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol (`&amp;&amp;`) som kombinerar två booleska värden där båda värdena måste vara sanna för att den övergripande koden ska vara sann. Exempelvis är `a &amp;&amp; b` bara sant när både `a` och `b` är `true`.</string>
				<key>Title</key>
				<string>logisk OCH-operator</string>
			</dict>
		</dict>
		<key>logical NOT operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol (`!`) som inverterar det booleska värdet i en bit kod. Exempelvis är `!a` `false` om `a` är `true`.</string>
				<key>Title</key>
				<string>logisk INTE-operator</string>
			</dict>
		</dict>
		<key>logical OR operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol (`||`) som kombinerar två booleska värden där bara ett värde måste vara sant för att den övergripande koden ska vara sann. Exempelvis är `a || b` sant när antingen `a` eller `b` är `true` (eller när `true` gäller för båda).</string>
				<key>Title</key>
				<string>logisk ELLER-operator</string>
			</dict>
		</dict>
		<key>logical operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol, som `&amp;&amp;`, `||` eller `!`, som ändrar eller kombinerar de booleska logiska värdena `true` och `false`.</string>
				<key>Title</key>
				<string>logisk operator</string>
			</dict>
		</dict>
		<key>loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kodblock som upprepas ett visst antal gånger (t.ex. en `for`-loop) eller tills ett villkor uppfylls (t.ex. en `while`-loop).</string>
				<key>Title</key>
				<string>loop</string>
			</dict>
		</dict>
		<key>memory</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Den del av en dator som lagrar koden för ett program och de data som den använder, antingen tillfälligt eller permanent.</string>
				<key>Title</key>
				<string>minne</string>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En funktion, dvs. en uppsättning kommandon, som är definierad inuti en [typ](glossary://type).</string>
				<key>Title</key>
				<string>metod</string>
			</dict>
		</dict>
		<key>modifier</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>I SwiftUI är en modifierare en [metod](glossary://method) som anropas för en vy för att ändra dess utseende eller beteende. Du gör modifierare enklare att läsa genom att placera var och en på en egen rad nedanför [instansen](glossary://instance) av vyn.</string>
				<key>Title</key>
				<string>modifierare</string>
			</dict>
		</dict>
		<key>modulo operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol (`%`) som returnerar återstoden efter att ett tal har dividerats med ett annat. Exempelvis returnerar `17 % 5` talet `2`.</string>
				<key>Title</key>
				<string>moduläroperator</string>
			</dict>
		</dict>
		<key>navigation bar</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Med ett navigeringsgränssnitt kan du göra ett val per skärm tills du når ett mål. Om du vill gå till ett annat mål måste du gå tillbaka steg för steg eller börja om från början och göra andra val. Navigeringsfältet överst på skärmen visar en titel som hjälper dig att komma ihåg var du är och innehåller en tillbakaknapp så att du kan återgå till den föregående skärmen.</string>
				<key>Title</key>
				<string>navigeringsfält</string>
			</dict>
		</dict>
		<key>nest</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Att placera ett upprepande kodblock (exempelvis en loop) inuti ett annat.</string>
				<key>Title</key>
				<string>nästla</string>
			</dict>
		</dict>
		<key>observable object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>När en klass [överensstämmer](glossary://conform) med protokollet `ObservableObject` leder alla förändringar av dess publicerade värden till att alla vyer som använder de värdena automatiskt uppdateras så att de återspeglar förändringarna.</string>
				<key>Title</key>
				<string>observerbart objekt</string>
			</dict>
		</dict>
		<key>observed object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>När en klass [överensstämmer](glossary://conform) med protokollet `ObservableObject` leder en förändring av ett av dess publicerade värden till att alla vyer som använder det värdet automatiskt uppdateras så att de återspeglar förändringen.</string>
				<key>Title</key>
				<string>observerbart objekt</string>
			</dict>
		</dict>
		<key>observer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Gällande ett [observerbart objekt](glossary://observable%20object) är en observatör någon vy eller något objekt som använder det observerbara objektets data. När det observerbara objektets data ändras känner SwiftUI igen ändringen och säger åt observatörerna att uppdatera.</string>
				<key>Title</key>
				<string>observatör</string>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En symbol, som `+`, `-` eller `&amp;&amp;`, som representerar en åtgärd på ett eller flera värden. I exempelvis `1 + 2` adderar additionsoperatorn (`+`) siffrorna `1` och `2`.</string>
				<key>Title</key>
				<string>operator</string>
			</dict>
		</dict>
		<key>outer loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett upprepande kodblock (en loop) som innehåller en annan (inre) loop.</string>
				<key>Title</key>
				<string>ytterloop</string>
			</dict>
		</dict>
		<key>parameter</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Namnet på ett inmatningsvärde till en funktion som används i definitionen av funktionen. I exempelvis `move(distance: Int)` är `distance` en parameter som tar ett värde av typen Int.</string>
				<key>Title</key>
				<string>parameter</string>
			</dict>
		</dict>
		<key>parent view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Behållarvyn för en eller flera [underliggande vyer](glossary://child%20view).</string>
				<key>Title</key>
				<string>överliggande vy</string>
			</dict>
		</dict>
		<key>pattern</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En upprepande uppsättning förhållanden eller data.</string>
				<key>Title</key>
				<string>mönster</string>
			</dict>
		</dict>
		<key>pitch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>I musik innebär en nots tonhöjd hur hög eller låg noten är, huvudsakligen baserat på vibrationens frekvens. En nots tonhöjd kan mätas i [hertz](glossary://hertz). En hög tonhöjd (~2000 Hz) kan låta som en vissla medan en låg tonhöjd (~40 Hz) kan låta som en råmande ko.</string>
				<key>Title</key>
				<string>tonhöjd</string>
			</dict>
		</dict>
		<key>primitive</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>När det gäller ett ramverk för programmering, som SwiftUI, är en primitiv en byggsten som tillhandahålls av ramverket för att sammanställa mer komplexa beteenden eller [gränssnitt](glossary://user%20interface).
</string>
				<key>Title</key>
				<string>primitiv</string>
			</dict>
		</dict>
		<key>primitive view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En [vy](glossary://view) som tillhandahålls av [SwiftUI](glossary://SwiftUI)-ramverket, exempelvis en `Button`-, `Text`- eller `Image`-vy. Primitivvyer används som byggstenar för att skapa mer komplexa [sammanställda vyer](glossary://composed%20view) i [användargränssnittet](glossary://user%20interface).</string>
				<key>Title</key>
				<string>primitiv vy</string>
			</dict>
		</dict>
		<key>private</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Nyckelordet private gör att koden endast är tillgänglig inom den särskilda källfilen.
- callout(Exempel):
`private class MyApp: App { }`</string>
				<key>Title</key>
				<string>private</string>
			</dict>
		</dict>
		<key>property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En variabel (en namngiven behållare som lagrar ett värde) som är definierad inuti en typ.</string>
				<key>Title</key>
				<string>egenskap</string>
			</dict>
		</dict>
		<key>property wrapper</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En egenskapspaketerare är ett enkelt sätt att använda ett vanligt beteendemönster i en egenskap. Paketeraren är ett sätt att märka egenskapen som definierar hur den ska lagras eller beräknas vid läsning.   Exempelvis säger egenskapspaketeraren `@State` åt SwiftUI hur lagringen av ett värde ska hanteras, och att uppdatera alla delar i en vy som använder det värdet när det ändras.</string>
				<key>Title</key>
				<string>egenskapspaketerare</string>
			</dict>
		</dict>
		<key>protocol</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En uppsättning krav, som metoder och egenskaper, som kan adopteras (eller följas) av en typ som en klass, struktur eller uppräkning.   När en typ adopterar ett protokoll tillhandahåller typen sin egen implementering av protokollkraven och sägs överensstämma med det protokollet.</string>
				<key>Title</key>
				<string>protokoll</string>
			</dict>
		</dict>
		<key>pseudocode</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En lättläst beskrivning av en algoritm, vanligtvis skriven med en blandning av vardagligt språk och kod.</string>
				<key>Title</key>
				<string>pseudokod</string>
			</dict>
		</dict>
		<key>public</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Nyckelordet public gör koden tillgänglig för alla filer i projektet.
                        
 - callout(Exempel):
`public func decorateWithSticker(space: Space) { }` </string>
				<key>Title</key>
				<string>public</string>
			</dict>
		</dict>
		<key>published value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lägg till [egenskapspaketeraren](glossary://property%20wrapper) `@Published` för att deklarera en egenskap som meddelar alla [observatörer](glossary://observer) när dess värde håller på att ändras. När värdet ändras uppdaterar SwiftUI alla vyer som använder dess data.</string>
				<key>Title</key>
				<string>publicerat värde</string>
			</dict>
		</dict>
		<key>return type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>När du definierar en funktion kan du välja att definiera en typ av värde som funktionen överför tillbaka som utmatning när den är klar, en så kallad returtyp.</string>
				<key>Title</key>
				<string>returtyp</string>
			</dict>
		</dict>
		<key>reusability</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kännetecken hos kod som gör att den kan användas i olika situationer inuti en app.</string>
				<key>Title</key>
				<string>återanvändbarhet</string>
			</dict>
		</dict>
		<key>root view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En vy där alla andra vyer placeras. Kallas också [vyn på översta nivån](glossary://top-level%20view). Den är den översta vyn i en [vyhierarki](glossary://view%20hierarchy) och fungerar som [överliggande vy](glossary://parent%20view) för alla [underliggande vyer](glossary://child%20view) i hierarkin.</string>
				<key>Title</key>
				<string>rotvy</string>
			</dict>
		</dict>
		<key>saturation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Nyansens intensitet, från en grå ton till helmättad färg. Mättnaden är en Double (ett decimaltal) i intervallet från `0` till `1`.</string>
				<key>Title</key>
				<string>mättnad</string>
			</dict>
		</dict>
		<key>sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En sensor är en enhet som upptäcker händelser, exempelvis förändring av värme, ljus, ljud eller rörelse, och returnerar ett värde.</string>
				<key>Title</key>
				<string>sensor</string>
			</dict>
		</dict>
		<key>source of truth</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Under appbyggen är det här en enda plats där alla data modifieras. Alla andra anslutningar till dessa data sker endast via referenser, vilket förhindrar att informationen duplicerad på andra platser. </string>
				<key>Title</key>
				<string>sanningskälla</string>
			</dict>
		</dict>
		<key>speech synthesis</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Datorgenerering av ljud som påminner om mänskligt tal, vanligtvis genererat från text.</string>
				<key>Title</key>
				<string>talsyntes</string>
			</dict>
		</dict>
		<key>state</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Den lagrade informationen hos en variabel, en app eller ett system vid en viss tid.</string>
				<key>Title</key>
				<string>status</string>
			</dict>
		</dict>
		<key>state object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lägg till [egenskapspaketeraren](glossary://property%20wrapper) `@StateObject` för att deklarera ett statusobjekt och tillhandahålla ett inledande värde som överensstämmer med [protokollet](glossary://protocol) `ObservableObject`. SwiftUI hanterar lagringen för ett statusobjekt och uppdaterar alla underliggande vyer som använder värdet varje gång dess publicerade värde ändras.</string>
				<key>Title</key>
				<string>statusobjekt</string>
			</dict>
		</dict>
		<key>state value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lägg till `@State` före en variabel som säger åt SwiftUI att hantera lagringen för ett värde. När värdet ändras uppdaterar SwiftUI alla delar i vyn som använder det värdet.</string>
				<key>Title</key>
				<string>statusvärde</string>
			</dict>
		</dict>
		<key>statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En struktur, t.ex. en loop eller ett `if`-uttryck, som ordnar kod i en app.</string>
				<key>Title</key>
				<string>uttryck</string>
			</dict>
		</dict>
		<key>string component</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En del – eller delsträng – av en sträng efter att strängen delas upp av en avskiljare. Om exempelvis strängen `"dog+cat+fish"` delas upp av avskiljaren `"+"` är strängarna `"dog"`, `"cat"` och `"fish"` de komponenter som uppstår.</string>
				<key>Title</key>
				<string>strängkomponent</string>
			</dict>
		</dict>
		<key>string concatenation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Åtgärden som förenar strängar genom att lägga till en sträng i slutet av en annan. `"fotboll"` är exempelvis en sammanlänkning av `"fot"` och `"boll"`.</string>
				<key>Title</key>
				<string>strängsamman­länkning</string>
			</dict>
		</dict>
		<key>string interpolation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>
Användningen av konstanter, variabler eller koduttryck inuti en längre sträng. De ska ersättas med sina aktuella värden när strängen utvärderas. I strängen `"Katy ate a \(fruit)."` kommer exempelvis `\(fruit)` att ersättas av `"peach"`, om `fruit` är en variabel med värdet `"peach"`, när strängen utvärderas. Strängen blir då `"Katy ate a peach."`</string>
				<key>Title</key>
				<string>sträng­interpolering</string>
			</dict>
		</dict>
		<key>syntax</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Reglerna för att skriva kod som datorer kan förstå och köra.</string>
				<key>Title</key>
				<string>syntax</string>
			</dict>
		</dict>
		<key>top-level view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En vy där alla andra vyer placeras. Kallas också [rotvyn](glossary://root%20view). Den är den översta vyn i en [vyhierarki](glossary://view%20hierarchy) och fungerar som [överliggande vy](glossary://parent%20view) för alla [underliggande vyer](glossary://child%20view) i hierarkin.</string>
				<key>Title</key>
				<string>vy på översta nivå</string>
			</dict>
		</dict>
		<key>trailing edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Den eftersläpande kanten, när den används till att referera till innehåll inuti en vy, refererar till den horisontella positionen för sluten av innehållet. Positionen för den eftersläpande kanten beror på dina inställningar och baserar vanligtvis på dina lands- och språkinställningar.
                    Exempelvis är den eftersläpande kanten till höger för språk som läses från vänster till höger, som engelska eller svenska. Språk som läses från höger till vänster, som arabiska eller hebreiska, har den eftersläpande kanten till vänster.</string>
				<key>Title</key>
				<string>ledande kant</string>
			</dict>
		</dict>
		<key>type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En namngiven gruppering av egenskaper (funktionerna) och metoder (beteendena) hos en datatyp.</string>
				<key>Title</key>
				<string>typ</string>
			</dict>
		</dict>
		<key>typography</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Konsten och tekniken att arrangera typer för att göra skrivet språk förståeligt, läsbart och snyggt när det visas.</string>
				<key>Title</key>
				<string>typografi</string>
			</dict>
		</dict>
		<key>user input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Information som en app får från interaktion med en användare, exempelvis från en användare som rör vid eller sveper på skärmen, matar in text med tangentbordet eller pratar i mikrofonen. 
</string>
				<key>Title</key>
				<string>användar­inmatning</string>
			</dict>
		</dict>
		<key>user interface</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Hur en användare styr en app. Kallas även ”UI” (gränssnitt) och används ofta till att referera till de visuella delarna av en app som en användare interagerar med (med element som bilder, text, knappar, reglage, rullningsvyer med mera).</string>
				<key>Title</key>
				<string>användargränssnitt</string>
			</dict>
		</dict>
		<key>variable</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En namngiven behållare som lagrar ett värde som kan ändras.</string>
				<key>Title</key>
				<string>variabel</string>
			</dict>
		</dict>
		<key>velocity</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Hastigheten för något i en angiven riktning.</string>
				<key>Title</key>
				<string>hastighet</string>
			</dict>
		</dict>
		<key>view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En vy är byggstenen i appens användargränssnitt och representerar alla visuella element som [överensstämmer](glossary://conform) med [protokollet](glossary://protocol) `View`.

Några exempel på vyer i SwiftUI är textvyer, bildvyer, reglage, rutnät, knappar och former.</string>
				<key>Title</key>
				<string>vy</string>
			</dict>
		</dict>
		<key>view hierarchy</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En struktur som definierar layouten i vyer i förhållande till andra vyer med en referens till en instans av vyn på översta nivån överst i hierarkin. Vyn på översta nivån kan innehålla valfritt antal delvyer som i sin tur kan innehålla egna delvyer och så vidare.</string>
				<key>Title</key>
				<string>vyhierarki</string>
			</dict>
		</dict>
		<key>volume</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Volymen är ljudstyrkan på ljudet som upptäcks av [sensorn](glossary://sensor). Den sträcker sig från 0 till 1.</string>
				<key>Title</key>
				<string>volym</string>
			</dict>
		</dict>
		<key>while loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ett kodblock som körs så länge ett givet villkor är `true`. När villkoret ändras till `false` slutar loopen att köras.</string>
				<key>Title</key>
				<string>while-loop</string>
			</dict>
		</dict>
		<key>wireframe</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>En kontur av ett objekt, som en sten, ett reglage eller ett block, i pusselvärlden. En trådmodell används för att påvisa möjligheten att objektet slumpmässigt kan dyka upp varje gång pusslet körs.</string>
				<key>Title</key>
				<string>trådmodell</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
