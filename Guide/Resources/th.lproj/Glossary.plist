<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Alpha</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>อัลฟา หรือ *ช่องอัลฟา* เกี่ยวข้องกับความทึบของสี โดยมีช่วงตั้งแต่ `0` (โปร่งใสทั้งหมด) ถึง `1` (ทึบทั้งหมด) ข้อมูลอัลฟาจะเป็นค่า Double (เลขทศนิยม) ที่มีระยะตั้งแต่ 0 ถึง 1</string>
				<key>Title</key>
				<string>อัลฟา</string>
			</dict>
		</dict>
		<key>Boolean</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่มีค่า `true` หรือ `false` ตัวอย่างเช่น `9 &lt; 7` จะให้ค่าบูลีนเป็น `false` เพราะ `9` ไม่น้อยกว่า `7`</string>
				<key>Title</key>
				<string>บูลีน</string>
			</dict>
		</dict>
		<key>Double</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่จัดเก็บตัวเลขที่มีส่วนที่เป็นเศษส่วน ตัวอย่างเช่น 3.14</string>
				<key>Title</key>
				<string>Double</string>
			</dict>
		</dict>
		<key>Int</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่จัดเก็บจำนวนเต็ม ซึ่งเป็นจำนวนเต็ม เช่น `10` หรือ `-42`</string>
				<key>Title</key>
				<string>Int</string>
			</dict>
		</dict>
		<key>String</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่จัดเก็บชุดอักขระ เช่น `"สวัสดีชาวโลก"` หรือ `"แมวเหมียวเต้นระบำ"`</string>
				<key>Title</key>
				<string>String</string>
			</dict>
		</dict>
		<key>Swift</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ภาษาโปรแกรมของ Apple ที่ใช้เขียนแอปสำหรับ iPhone, iPad, Mac, Apple Watch และ Apple TV</string>
				<key>Title</key>
				<string>Swift</string>
			</dict>
		</dict>
		<key>SwiftUI</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>SwiftUI เป็นวิธีที่ทันสมัยในการประกาศอินเทอร์เฟซผู้ใช้สำหรับแพลตฟอร์ม Apple โดยมีมุมมอง ตัวควบคุม และโครงสร้างเค้าโครงสำหรับการประกาศอินเทอร์เฟซผู้ใช้ของแอปของคุณ เฟรมเวิร์คมีตัวจัดการอีเวนต์สำหรับส่งการแตะ คำสั่งนิ้ว และ input ประเภทอื่นๆ ไปยังแอปของคุณ และมีเครื่องมือในการจัดการลำดับของข้อมูลจากโมเดลของแอปของคุณไปจนถึงมุมมองและตัวควบคุมที่ผู้ใช้จะเห็นและโต้ตอบด้วย</string>
				<key>Title</key>
				<string>SwiftUI</string>
			</dict>
		</dict>
		<key>absolute value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ค่าที่ไม่ได้ถูกตั้งชื่อของตัวเลข ตัวอย่างเช่น ค่าสัมบูรณ์ของ -12 คือ 12 และค่าสัมบูรณ์ของ 23.4 คือ 23.4</string>
				<key>Title</key>
				<string>ค่าสัมบูรณ์</string>
			</dict>
		</dict>
		<key>abstraction</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เวอร์ชั่นที่เรียบง่ายของสิ่งที่มีความซับซ้อนกว่า  การลดรายละเอียดจะซ่อนรายละเอียดต่างๆ เพื่อให้คุณสามารถคิดคำนวณและรวมส่วนต่างๆ ของโค้ดของคุณเข้าด้วยกันได้ง่ายยิ่งขึ้น  ตัวอย่างเช่น [ประเภท](glossary://type)เป็นการลดรายละเอียดที่ซ่อนการตั้งค่า คุณสมบัติ และวิธีการของชื่อแทนประเภทของประเภทนั้นๆ</string>
				<key>Title</key>
				<string>การลดรายละเอียด</string>
			</dict>
		</dict>
		<key>accelerometer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เซ็นเซอร์ที่วัดความเร่งของอุปกรณ์ของคุณในรูปแบบสามมิติ: ขึ้นและลง ไปข้างหน้าและข้างหลัง และซ้ายและขวา</string>
				<key>Title</key>
				<string>อุปกรณ์ตรวจจับการเคลื่อนไหว</string>
			</dict>
		</dict>
		<key>adopt</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในการรับโปรโตคอลมาใช้ ประเภทจะมีชุดของการใช้งานของตัวเองสำหรับข้อกำหนดของโปรโตคอล เช่น วิธีการและคุณสมบัติที่แสดงในรายการ</string>
				<key>Title</key>
				<string>รับมาใช้</string>
			</dict>
		</dict>
		<key>algorithm</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คำแนะนำหรือกฎแบบเป็นลำดับขั้นตอนสำหรับแก้ไขปัญหา ตัวอย่างเช่น รายการขั้นตอนต่างๆ ในการชงชาอาจเรียกได้ว่าเป็นอัลกอริทึม</string>
				<key>Title</key>
				<string>อัลกอริทึม</string>
			</dict>
		</dict>
		<key>append</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในการเพิ่มที่จุดสิ้นสุดของบางอย่าง คุณสามารถผนวกสตริงไปยังจุดสิ้นสุดของสตริงอื่น หรือผนวกรายการไปยังอาร์เรย์ของรายการได้
</string>
				<key>Title</key>
				<string>ผนวก</string>
			</dict>
		</dict>
		<key>application</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ซอฟต์แวร์นั้นประกอบไปด้วยโค้ดที่ช่วยให้คุณสามารถทำงานเฉพาะอย่างได้ ตัวอย่างเช่น คุณใช้แอปพลิเคชัน (แอป) ข้อความเพื่อส่งและรับข้อความ</string>
				<key>Title</key>
				<string>แอปพลิเคชัน</string>
			</dict>
		</dict>
		<key>argument</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ค่า input ที่ส่งผ่านไปในฟังก์ชั่นเพื่อปรับแต่งลักษณะการทำงานของฟังก์ชั่น ตัวอย่างเช่น ในการเรียกใช้ฟังก์ชั่น `move(distance: 3)` ตัวเลข `3` คืออาร์กิวเมนต์ที่กำหนดจำนวนช่องในการเคลื่อนที่</string>
				<key>Title</key>
				<string>อาร์กิวเมนต์</string>
			</dict>
		</dict>
		<key>arithmetic operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ต่างๆ เช่น `+`, `-`, `*` หรือ `/` ที่ใช้ในการคำนวณทางคณิตศาสตร์ขั้นพื้นฐานกับตัวเลขตั้งแต่หนึ่งตัวขึ้นไป ตัวอย่างเช่น  `42 / 7` และ `17 - 5` ก็ใช้ตัวดำเนินการคำนวณ</string>
				<key>Title</key>
				<string>ตัวดำเนินการคำนวณ</string>
			</dict>
		</dict>
		<key>array</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คอลเลกชั่นที่จัดเก็บรายการประเภทเดียวกันโดยเรียงตามลำดับรายการเดียวกันอาจปรากฏได้หลายครั้งในตำแหน่งที่แตกต่างกัน ตัวอย่างเช่น `highScores = [37, 34, 29, 29, 26]` เป็นอาร์เรย์[จำนวนเต็ม](glossary://Int)</string>
				<key>Title</key>
				<string>อาร์เรย์</string>
			</dict>
		</dict>
		<key>asset</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>แอสเซทคือภาพ เสียง และรายการอื่นๆ ที่แอปของคุณใช้ คุณสามารถนำเข้าแอสเซทไปยัง Swift Playgrounds จากแอปอื่นๆ ได้ เช่น ไฟล์และรูปภาพ</string>
				<key>Title</key>
				<string>แอสเซท</string>
			</dict>
		</dict>
		<key>assignment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การทำงานที่กำหนดค่าของตัวแปรหรือค่าคงที่</string>
				<key>Title</key>
				<string>เท่ากับ</string>
			</dict>
		</dict>
		<key>assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ `=` ที่ใช้ในการตั้งอาร์กิวเมนต์ ตัวอย่างเช่น `greeting = "สวัสดี"` จะตั้งค่า `greeting` เป็น `"สวัสดี"`</string>
				<key>Title</key>
				<string>ตัวดำเนินการกำหนดค่า</string>
			</dict>
		</dict>
		<key>asynchronous process</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ดที่สามารถรันในระหว่างที่ส่วนที่เหลือของแอปหรือโปรแกรมของคุณดำเนินการต่อ กระบวนการแบบอะซิงโครนัสสามารถรันพร้อมกับส่วนที่เหลือของโค้ดแอปของคุณได้ ซึ่งต่างจากกระบวนการแบบซิงโครนัสที่จะปิดกั้นการทำงานของโปรแกรมจนกว่าจะเสร็จ</string>
				<key>Title</key>
				<string>กระบวนการแบบอะซิงโครนัส</string>
			</dict>
		</dict>
		<key>binding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่ม[ตัวหุ้มคุณสมบัติ](glossary://property%20wrapper) `@Binding` เพื่อสร้างการเชื่อมต่อแบบสองทางระหว่างคุณสมบัติที่จัดเก็บข้อมูลและมุมมองที่แสดงและเปลี่ยนแปลงข้อมูล การรวมจะเชื่อมต่อคุณสมบัติกับแหล่งข้อมูลจริงที่จัดเก็บไว้ที่อื่น แทนที่จะจัดเก็บข้อมูลโดยตรง 

ตัวอย่างเช่น ปุ่มที่สลับระหว่างเปิดหรือปิดการเล่นและการหยุดพักสามารถสร้างการรวมให้กับคุณสมบัติของมุมมองหลักโดยใช้คุณสมบัติ `@Binding` ได้
</string>
				<key>Title</key>
				<string>การรวม</string>
			</dict>
		</dict>
		<key>body</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เนื้อหาของ[มุมมอง](glossary://view)คือที่ที่คุณระบุเนื้อหาของมุมมองซึ่งประกอบด้วย[มุมมองตั้งต้น](glossary://primitive%20view)อย่างน้อยหนึ่งมุมมองที่ SwiftUI ระบุหรือ[มุมมองที่ถูกประกอบ](glossary://composed%20view)ใดๆ ที่คุณสร้างไว้แล้ว</string>
				<key>Title</key>
				<string>เนื้อหา</string>
			</dict>
		</dict>
		<key>bounds</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในอาร์เรย์ ระยะของค่าที่ดัชนีต่ออาร์เรย์สามารถมีได้ ตัวอย่างเช่น อาร์เรย์ `[17, 42, 95]` สามารถมีค่าดัชนีได้ตั้งแต่ 0 ถึง 2 การตรวจสอบขอบเขตคือกระบวนการตรวจสอบยืนยันว่าค่าดัชนีนั้นอยู่ภายในขอบเขตของอาร์เรย์</string>
				<key>Title</key>
				<string>ขอบเขต</string>
			</dict>
		</dict>
		<key>brightness</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ปริมาณของแสงที่ผ่านเข้ามาในกล้อง ตั้งแต่ `0` (ไม่มีแสง) ถึง `1` (มีแสงเต็มที่) ค่าความสว่างจะเป็น[ค่า Double](glossary://Double) (เลขทศนิยม) ตั้งแต่ `0` ถึง `1`</string>
				<key>Title</key>
				<string>ความสว่าง</string>
			</dict>
		</dict>
		<key>bug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อผิดพลาดในโค้ดที่ป้องกันไม่ให้แอปพลิเคชันทำงานตามที่คาดไว้ 
</string>
				<key>Title</key>
				<string>บั๊ก</string>
			</dict>
		</dict>
		<key>bundle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การแสดงรหัสและแหล่งข้อมูลที่จัดเก็บอยู่ในไดเรกทอรีชุดรวมบนดิสก์ ชุดรวมจะจัดระเบียบแหล่งข้อมูลที่มีอยู่เป็นไดเรกทอรีย่อยที่มีการกำหนดไว้ชัดเจน และโครงสร้างของชุดรวมจะแตกต่างกันไปตามแพลตฟอร์มและประเภทของชุดรวมนั้น ด้วยการใช้วัตถุของชุดรวม คุณจะสามารถเข้าถึงแหล่งข้อมูลของชุดรวมได้โดยไม่ต้องรู้โครงสร้างของชุดรวม</string>
				<key>Title</key>
				<string>ชุดรวม</string>
			</dict>
		</dict>
		<key>call</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การเรียกใช้ฟังก์ชั่นในโค้ดก็คือการสั่งให้ฟังก์ชั่นทำงานและดำเนินการทำงานตามที่ได้กำหนดไว้ภายในตัวของฟังก์ชั่น</string>
				<key>Title</key>
				<string>เรียกใช้</string>
			</dict>
		</dict>
		<key>child view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>มุมมองที่มีอยู่ภายใน[มุมมองหลัก](glossary://parent%20view) มุมมองหลักสามารถมีมุมมองรายการย่อยจำนวนเท่าใดก็ได้ โดยแต่ละมุมมองสามารถมีมุมมองรายการย่อยของตัวเองได้ เป็นต้น มุมมองและโหนดลูกของมุมมองทั้งหมดประกอบขึ้นเป็น[ลำดับชั้นมุมมอง](glossary://view%20hierarchy)</string>
				<key>Title</key>
				<string>มุมมองรายการย่อย</string>
			</dict>
		</dict>
		<key>class</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คลาสคือที่จัดเก็บโค้ดที่ทำหน้าที่เป็นแม่แบบสำหรับสร้างสำเนาจำนวนมากของสิ่งของประเภทเดียวกัน เช่นเดียวกับที่พิมพ์เขียวต้องระบุคุณสมบัติและลักษณะการทำงานของวัตถุ เช่น จักรยาน คลาสจะระบุสิ่งเหล่านี้เป็น[คุณสมบัติของตัวแปร](glossary://property)และ[วิธีการ](glossary://method)

เมื่อคุณสร้างสำเนาหรือ[ชื่อแทนประเภท](glossary://instance)ใหม่ของคลาส ชื่อแทนประเภทนั้นจะจัดเก็บคุณสมบัติของตัวแปรและวิธีการทั้งหมดของแม่แบบของคุณ อย่างไรก็ตาม ค่าแต่ละค่าของชื่อแทนประเภทสามารถเปลี่ยนแปลงได้อย่างอิสระ ซึ่งทำให้คุณสามารถปรับแต่งลักษณะการทำงานของแต่ละสำเนาได้ ตัวอย่างเช่น คลาสจักรยานอาจมีคุณสมบัติของตัวแปรสี ซึ่งทำให้คุณสามารถสร้างจักรยานได้ทั้งสีแดงและสีน้ำเงิน</string>
				<key>Title</key>
				<string>คลาส</string>
			</dict>
		</dict>
		<key>closure</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การปิดคือ[ฟังก์ชั่น](glossary://function)ที่รันได้ในจุดที่ตั้งอยู่ โดยไม่จำเป็นต้องมีชื่อ
					
```
scene.setOnStartHandler {
    // เนื้อหาของการปิด
}
```
                    
การปิดสามารถบันทึกและจัดเก็บสิ่งอ้างอิงไปยังค่าคงที่และตัวแปรจากบริบทที่ค่าคงที่และตัวแปรถูกกำหนดได้ โดยเรียกว่าการปิดค่าคงที่และตัวแปรเหล่านั้น</string>
				<key>Title</key>
				<string>การปิด</string>
			</dict>
		</dict>
		<key>code comment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ความคิดเห็นเกี่ยวกับโค้ดเป็นวิธีการที่นักเขียนโปรแกรมใช้บันทึกโค้ดของพวกเขา  คุณสามารถเริ่มเขียนความคิดเห็นแบบบรรทัดเดียวได้โดยใช้เครื่องหมายทับซ้ายสองตัวแล้วตามด้วยเว้นวรรค ตัวอย่างเช่น "// นี่คือความคิดเห็นของฉัน"  เมื่อคุณรันโค้ดของคุณ ความคิดเห็นเกี่ยวกับโค้ดจะไม่ดำเนินการ</string>
				<key>Title</key>
				<string>ความคิดเห็นเกี่ยวกับโค้ด</string>
			</dict>
		</dict>
		<key>code expression</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ส่วนของโค้ดที่สามารถหาค่าเพื่อส่งคืนค่าได้ ตัวอย่างเช่น ถ้า `months` คืออาร์เรย์ที่มี 12 รายการ นิพจน์ของโค้ด `months.count - 1` จะส่งคืนเป็นค่า `11`</string>
				<key>Title</key>
				<string>นิพจน์โค้ด</string>
			</dict>
		</dict>
		<key>coding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การเขียนคำสั่ง โครงสร้างโค้ด และอัลกอริทึมเพื่อสร้างแอปพลิเคชัน</string>
				<key>Title</key>
				<string>การเขียนโค้ด</string>
			</dict>
		</dict>
		<key>collection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โครงสร้างข้อมูล เช่น อาร์เรย์หรือพจนานุกรม ที่ใช้สำหรับจัดเก็บข้อมูลหลายๆ ชิ้น</string>
				<key>Title</key>
				<string>คอลเลกชั่น</string>
			</dict>
		</dict>
		<key>command</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โค้ดที่แจ้งให้แอปพลิเคชันดำเนินการทำงานบางอย่าง </string>
				<key>Title</key>
				<string>คำสั่ง</string>
			</dict>
		</dict>
		<key>comment out</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในการเปลี่ยนบรรทัดโค้ดให้เป็น[ความคิดเห็นเกี่ยวกับโค้ด](glossary://code%20comment)เพื่อป้องกันไม่ให้บรรทัดโค้ดรัน คุณสามารถเพิ่ม `//` ข้างหน้าบรรทัดโค้ดใดๆ ได้ ตัวอย่างเช่น:
                
`// level.run()`</string>
				<key>Title</key>
				<string>ทำให้เป็นความคิดเห็น</string>
			</dict>
		</dict>
		<key>comparison operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์อย่างเช่น `==`, `!=`, `&lt;`, `&gt;`, `&lt;=` หรือ `&gt;=` ที่ใช้เปรียบเทียบระหว่างค่าสองค่า คุณสามารถใช้ตัวดำเนินการเปรียบเทียบในเงื่อนไขของชุดคำสั่ง `if` หรือ `while` loop ได้ เพื่อให้ได้ค่าบูลีนที่ระบุว่าการเปรียบเทียบเป็น `true` หรือไม่ ตัวอย่างเช่น `6 &gt; 8` เปรียบเทียบ `6` กับ `8` แล้วจะได้ `false`</string>
				<key>Title</key>
				<string>ตัวดำเนินการเปรียบเทียบ</string>
			</dict>
		</dict>
		<key>compiler error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อผิดพลาดของคอมไพเลอร์เกิดจากโค้ดไม่ถูกต้อง คุณจะเห็นข้อผิดพลาดนี้เป็นจุดสีแดงที่ระยะขอบด้านซ้ายมือ หรือในแถบเครื่องมือ</string>
				<key>Title</key>
				<string>ข้อผิดพลาดของคอมไพเลอร์</string>
			</dict>
		</dict>
		<key>composed view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>[มุมมอง](glossary://view)ที่สร้างโดยรวมมุมมอง[ตั้งต้น](glossary://primitive%20view)หรือมุมมองที่ถูกประกอบอย่างน้อยหนึ่งมุมมอง
</string>
				<key>Title</key>
				<string>มุมมองที่ถูกประกอบ</string>
			</dict>
		</dict>
		<key>composition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>กระบวนการการรวมส่วนเล็กๆ ของแอปพลิเคชันเพื่อสร้างชิ้นส่วนที่ใหญ่ขึ้นซึ่งช่วยให้ทำงานและทำความเข้าใจได้ง่ายยิ่งขึ้น</string>
				<key>Title</key>
				<string>การทำงานร่วมกัน</string>
			</dict>
		</dict>
		<key>compound assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวดำเนินการที่นำเท่ากับ (การกำหนดค่าของตัวแปร) มารวมกับการดำเนินการอย่างอื่น เช่น การบวกหรือการลบ ตัวอย่างเช่น ถ้าค่าปัจจุบันของ `a` คือ `1` การใช้ `a += 3` จะบวก `3` กับ `1` แล้วกำหนดผลลัพธ์ให้เท่ากับ `a` ดังนั้นค่าของ `a` ในตอนนี้คือ `4`</string>
				<key>Title</key>
				<string>ตัวดำเนินการกำหนดค่าแบบผสม</string>
			</dict>
		</dict>
		<key>computed property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>แทนที่จะจัดเก็บค่าโดยตรง คุณสมบัติที่คำนวณแล้วจะคำนวณค่าโดยอิงจากสถานะปัจจุบันของค่าอื่นๆ ที่เกี่ยวข้องเมื่อดึงข้อมูล

ในตัวอย่างด้านล่าง พื้นที่จะเป็นคุณสมบัติที่คำนวณแล้ว ในขณะที่ `width` และ `height` จะเป็นคุณสมบัติที่จัดเก็บไว้:

```
struct RectangleCalculator { 
    var width = 10.0
    var height = 10.0
    
    var area : Double { 
        return width * height
    }
} 
```</string>
				<key>Title</key>
				<string>คุณสมบัติที่คำนวณแล้ว</string>
			</dict>
		</dict>
		<key>conditional code</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โค้ดที่จะรันก็ต่อเมื่อเงื่อนไขบางประการเป็นไปตามที่กำหนด ตัวอย่างเช่น ชุดคำสั่ง `if` และ `while` loop มีโค้ดที่ทำงานผ่านเงื่อนไข ซึ่งจะรันก็ต่อเมื่อเงื่อนไข if หรือ while เป็น `true` เท่านั้น</string>
				<key>Title</key>
				<string>โค้ดที่ทำงานผ่านเงื่อนไข</string>
			</dict>
		</dict>
		<key>conform</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่ระบุว่าสอดคล้องกับโปรโตคอลเมื่อมีการใช้งานของตัวเองสำหรับข้อกำหนดของโปรโตคอลนั้น</string>
				<key>Title</key>
				<string>สอดคล้อง</string>
			</dict>
		</dict>
		<key>constant</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คอนเทนเนอร์ที่มีชื่อซึ่งจัดเก็บค่าที่ไม่สามารถเปลี่ยนแปลงได้</string>
				<key>Title</key>
				<string>ค่าคงที่</string>
			</dict>
		</dict>
		<key>container</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คอนเทนเนอร์ หรือที่เรียกว่า[มุมมองหลัก](glossary://parent%20view) เป็นมุมมองที่มีมุมมองอื่นๆ อยู่ภายในคอนเทนเนอร์</string>
				<key>Title</key>
				<string>คอนเทนเนอร์</string>
			</dict>
		</dict>
		<key>coordinates</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชุดของตัวเลขที่กำหนดตำแหน่งในพื้นที่ว่างโดยไม่ซ้ำกัน ตัวอย่างเช่น (100, -200) คือพิกัดสำหรับจุดในพื้นที่ 2 มิติ โดยพิกัด x อยู่ที่ 100 และพิกัด y อยู่ที่ -200</string>
				<key>Title</key>
				<string>พิกัด</string>
			</dict>
		</dict>
		<key>data</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อมูลที่ถูกประมวลผลหรือจัดเก็บโดยคอมพิวเตอร์และแตกต่างกันอย่างชัดเจนเมื่อดูจากโค้ด</string>
				<key>Title</key>
				<string>ข้อมูล</string>
			</dict>
		</dict>
		<key>debug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ค้นหาและแก้ไขข้อผิดพลาดในโค้ดที่ป้องกันไม่ให้แอปพลิเคชันทำงานอย่างถูกต้อง </string>
				<key>Title</key>
				<string>แก้บั๊ก</string>
			</dict>
		</dict>
		<key>declaration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ส่วนของโค้ดที่สร้างสิ่งใหม่ในแอปพลิเคชันของคุณ เช่น ฟังก์ชั่น ตัวแปร หรือประเภทที่กำหนดเอง ตัวอย่างเช่น `let planet = "Earth"` ประกาศค่าคงที่ใหม่ `planet` และให้ค่าเป็น `"Earth"`</string>
				<key>Title</key>
				<string>การประกาศ</string>
			</dict>
		</dict>
		<key>decomposition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ขั้นตอนของการแยกปัญหาใหญ่ๆ ให้เล็กลง ให้เป็นชิ้นส่วนที่สามารถจัดการได้ง่ายยิ่งขึ้น</string>
				<key>Title</key>
				<string>การแยกย่อย</string>
			</dict>
		</dict>
		<key>decrement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ลดค่าตัวเลขแบบจำนวนเต็ม ส่วนใหญ่จะเป็น 1</string>
				<key>Title</key>
				<string>การลดลง</string>
			</dict>
		</dict>
		<key>define</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ระบุค่าหรือการทำงานที่ชัดเจนของชิ้นส่วนของโค้ดที่สร้างใหม่ เช่น ฟังก์ชั่น ตัวแปร หรือประเภทแบบกำหนดเอง ตัวอย่างเช่น คุณกำหนดฟังก์ชั่นโดยการระบุชุดคำสั่งภายในฟังก์ชั่นเพื่อสั่งให้ฟังก์ชั่นทำงาน</string>
				<key>Title</key>
				<string>กำหนด</string>
			</dict>
		</dict>
		<key>dot notation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>รูปแบบหนึ่งของไวยากรณ์ที่ใช้เข้าถึงคุณสมบัติหรือเรียกใช้วิธีการของชื่อแทนประเภท ตัวอย่างเช่น `expert.toggleSwitch()` เรียกใช้วิธีการ `toggleSwitch()` บนชื่อแทนประเภท `expert`</string>
				<key>Title</key>
				<string>จุด</string>
			</dict>
		</dict>
		<key>efficiency</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การวัดว่าโค้ดสามารถใช้งานได้อย่างรวดเร็วตามจุดประสงค์ได้ดีแค่ไหน ในขณะที่ใช้ทรัพยากร เช่น หน่วยความจำหรือพลังงาน อย่างน้อยที่สุดเท่าที่จะทำได้</string>
				<key>Title</key>
				<string>ประสิทธิภาพ</string>
			</dict>
		</dict>
		<key>else block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกสุดท้ายของโค้ดในชุดคำสั่ง `if` บล็อกของ `else` จะรันหากเงื่อนไขทั้งหมดที่อยู่ในชุดคำสั่ง `if` เป็น `false`</string>
				<key>Title</key>
				<string>บล็อก else</string>
			</dict>
		</dict>
		<key>else if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ดในชุดคำสั่ง `if` ที่ใช้ตรวจสอบเงื่อนไขที่ไม่ถูกตรวจสอบโดยบล็อก `if` หรือ บล็อก `else if` อื่นๆ</string>
				<key>Title</key>
				<string>บล็อก else if</string>
			</dict>
		</dict>
		<key>enumeration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ประเภทที่กำหนดชุดของค่าที่ไม่ซ้ำกัน แต่สัมพันธ์กัน ซึ่งเรียกว่า *เคสการกำหนดตัวแปรขึ้นมาใช้เอง* ตัวอย่างเช่น การกำหนดตัวแปรขึ้นมาใช้เอง `Direction` จะกำหนดเคสสำหรับทิศทางเข็มทิศ `north`, `south`, `east` และ `west` เมื่อกำหนดตัวแปรขึ้นมาใช้เองแล้วกำหนดให้เท่ากับตัวแปรหรือค่าคงที่ คุณจะต้องเลือกเพียงเคสเดียวจากเคสทั้งหมดเสมอ เช่น `let compassDirection: Direction = .north`</string>
				<key>Title</key>
				<string>การกำหนดตัวแปรขึ้นมาใช้เอง</string>
			</dict>
		</dict>
		<key>environment object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่ม[ตัวหุ้มคุณสมบัติ](glossary://property%20wrapper) `@EnvironmentObject` เพื่อประกาศคุณสมบัติวัตถุที่สังเกตเห็นได้ที่ระบุโดยมุมมองหลักหรือโหนดแม่ ถ้าคุณประกาศคุณสมบัติเป็นวัตถุสภาพแวดล้อม ให้ตรวจสอบให้แน่ใจว่าได้ตั้งค่าชื่อแทนประเภทโมเดลที่เกี่ยวข้องบนมุมมองโหมดแม่แล้วโดยการเรียกปุ่มปรับค่า `environmentObject(_:)`</string>
				<key>Title</key>
				<string>วัตถุสภาพแวดล้อม</string>
			</dict>
		</dict>
		<key>event</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การทำงานที่สามารถตรวจพบได้ด้วยแอปพลิเคชันของคอมพิวเตอร์ input เช่น การกดปุ่มหรือการหมุนหน้าจอ จะสั่งทำงานอีเวนต์</string>
				<key>Title</key>
				<string>อีเวนต์</string>
			</dict>
		</dict>
		<key>event handler</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ฟังก์ชั่นที่จะถูกเรียกใช้หลังจากที่อีเวนต์เกิดขึ้นเพื่อจัดการกับอีเวนต์</string>
				<key>Title</key>
				<string>ตัวจัดการอีเวนต์</string>
			</dict>
		</dict>
		<key>filtering</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การประมวลผลข้อมูลในคอลเลกชั่นหรือโครงสร้างข้อมูลเพื่อสร้างข้อมูลชุดใหม่</string>
				<key>Title</key>
				<string>การฟิลเตอร์</string>
			</dict>
		</dict>
		<key>font</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชุดของอักขระข้อความในลักษณะดีไซน์ น้ำหนัก และขนาดที่เฉพาะเจาะจง ดีไซน์ของแบบอักษรเรียกว่า *แบบตัวพิมพ์* และชุดรูปแบบของดีไซน์นี้จะรวมกันเป็น *ตระกูล* แบบตัวพิมพ์ ตัวอย่างเช่น HelveticaNeue คือแบบตัวพิมพ์ และ 10-point HelveticaNeue-Bold คือแบบอักษร</string>
				<key>Title</key>
				<string>แบบอักษร</string>
			</dict>
		</dict>
		<key>for loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ดที่ซ้ำกัน ซึ่งรันตามจำนวนครั้งที่กำหนด</string>
				<key>Title</key>
				<string>for loop</string>
			</dict>
		</dict>
		<key>full function name</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชื่อเต็มของฟังก์ชั่น ซึ่งรวมถึงชื่อของพารามิเตอร์ที่คั่นด้วยเครื่องหมายทวิภาค (`:`) ตัวอย่างเช่น `move(to:duration:)`</string>
				<key>Title</key>
				<string>ชื่อฟังก์ชั่นแบบเต็ม</string>
			</dict>
		</dict>
		<key>function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชุดของ[คำสั่ง](glossary://command)ที่มีชื่อซึ่งสามารถรันได้ในเวลาที่ต้องการ</string>
				<key>Title</key>
				<string>ฟังก์ชั่น</string>
			</dict>
		</dict>
		<key>function definition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คำจำกัดความของฟังก์ชั่นจะอธิบายว่าฟังก์ชั่นนั้นทำอะไร คาดว่าจะได้รับอะไร และสิ่งที่จะส่งกลับเมื่อทำเสร็จ</string>
				<key>Title</key>
				<string>คำจำกัดความของฟังก์ชั่น</string>
			</dict>
		</dict>
		<key>global function</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ฟังก์ชั่นที่สามารถเข้าถึงได้จากทุกไฟล์ในโปรเจ็กต์ของคุณ</string>
				<key>Title</key>
				<string>ฟังก์ชั่นกลาง</string>
			</dict>
		</dict>
		<key>global variable</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวแปรที่สามารถเข้าถึงได้จากทุกไฟล์ในโปรเจ็กต์ของคุณ</string>
				<key>Title</key>
				<string>ตัวแปรกลาง</string>
			</dict>
		</dict>
		<key>grayscale</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>กลุ่มเฉดสีเทาไล่ตั้งแต่สีขาวถึงสีดำ</string>
				<key>Title</key>
				<string>ระดับสีเทา</string>
			</dict>
		</dict>
		<key>gyroscope</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เซ็นเซอร์ที่วัดแนวของอุปกรณ์ของคุณในรูปแบบสามมิติ: ความเอียงจากด้านหน้าไปด้านหลัง ความเอียงจากซ้ายไปขวา และการหมุนรอบจุดศูนย์กลาง</string>
				<key>Title</key>
				<string>ไจโรสโคป</string>
			</dict>
		</dict>
		<key>hertz</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เฮิรตซ์ (Hz) คือหนึ่งรอบต่อวินาที เมื่อเปรียบเทียบกับการสั่นของเสียง 1 Hz จะเท่ากับคลื่นเสียงหนึ่งคลื่นต่อวินาที ทั้งนี้ มนุษย์สามารถได้ยินเสียงอยู่ที่ระหว่าง 20 Hz ถึง 16,000 Hz</string>
				<key>Title</key>
				<string>เฮิรตซ์</string>
			</dict>
		</dict>
		<key>hue</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โทนสีบนวงล้อสี ค่านี้จะเป็นค่า Double (เลขทศนิยม) ตั้งแต่ `0` ถึง `1`</string>
				<key>Title</key>
				<string>สีสัน</string>
			</dict>
		</dict>
		<key>if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกแรกของโค้ดในชุดคำสั่ง `if` บล็อก `if` จะรันหากเงื่อนไขที่อยู่ในชุดคำสั่ง `if` เป็น `true`</string>
				<key>Title</key>
				<string>บล็อก if</string>
			</dict>
		</dict>
		<key>if statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โครงสร้างโค้ดที่ใช้รันโค้ดโดยอิงจากค่าของเงื่อนไขตั้งแต่หนึ่งรายการขึ้นไป โค้ดบล็อกแรกในชุดคำสั่ง `if` คือบล็อก `if` และในชุดคำสั่ง `if` ยังอาจมีบล็อกอื่นๆ ที่ให้การตรวจสอบเพิ่มเติมอีกด้วย เช่น บล็อก `else` และ บล็อก `else if`</string>
				<key>Title</key>
				<string>ชุดคำสั่ง if</string>
			</dict>
		</dict>
		<key>increment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่มค่าตัวเลขแบบจำนวนเต็ม ส่วนใหญ่จะเป็น 1</string>
				<key>Title</key>
				<string>การเพิ่มขึ้น</string>
			</dict>
		</dict>
		<key>index</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวเลขที่แสดงถึงตำแหน่งของรายการใน[อาร์เรย์](glossary://array)</string>
				<key>Title</key>
				<string>ดัชนี</string>
			</dict>
		</dict>
		<key>index out of range error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อผิดพลาดที่เกิดจากการพยายามเข้าถึงอาร์เรย์โดยใช้ดัชนีที่อยู่นอกระยะของอาร์เรย์นั้น ตัวอย่างเช่น ดัชนี `2` อยู่นอกระยะของอาร์เรย์ต่อไปนี้: `[17, 42]`</string>
				<key>Title</key>
				<string>ข้อผิดพลาดดัชนีอยู่นอกระยะ</string>
			</dict>
		</dict>
		<key>initialization</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การสร้างชื่อแทนประเภทของประเภทใหม่ ซึ่งรวมถึงการตั้งค่าเริ่มต้นของคุณสมบัติของตัวแปรของประเภท</string>
				<key>Title</key>
				<string>การสร้างค่าเริ่มต้น</string>
			</dict>
		</dict>
		<key>initializer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวเริ่มต้นถูกเรียกใช้เพื่อสร้าง[ชื่อแทนประเภท](glossary://instance)ใหม่ของประเภท ตัวเริ่มต้นจะต้องตั้งค่าเริ่มต้นทั้งหมดสำหรับคุณสมบัติของประเภท และมักจะมีโค้ดการตั้งค่าอื่นๆ</string>
				<key>Title</key>
				<string>ตัวเริ่มต้น</string>
			</dict>
		</dict>
		<key>inner loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ด (loop) ที่ซ้ำกัน ซึ่งซ้อนอยู่ใน (outer) loop อื่น</string>
				<key>Title</key>
				<string>inner loop</string>
			</dict>
		</dict>
		<key>instance</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ค่าของ[ประเภท](glossary://type)บางประเภท ตัวอย่างเช่น ใน `let motion = MotionSensor()``motion` เป็นชื่อแทนประเภทของประเภท `MotionSensor`</string>
				<key>Title</key>
				<string>ชื่อแทนประเภท</string>
			</dict>
		</dict>
		<key>iteration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การทำขั้นตอนซ้ำ เช่น การดำเนินการการทำงานเดียวกันบนรายการแต่ละรายการในอาร์เรย์</string>
				<key>Title</key>
				<string>การทำซ้ำ</string>
			</dict>
		</dict>
		<key>lag</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ความเร็วหรือการตอบสนองของแอปลดลงเนื่องจากความต้องการในการประมวลผล ความสามารถในการประมวลผล หรือทั้งสองอย่าง</string>
				<key>Title</key>
				<string>ความล่าช้า</string>
			</dict>
		</dict>
		<key>leading edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เมื่อใช้ในการอ้างอิงถึงเนื้อหาภายในมุมมอง ขอบด้านหน้าจะหมายถึงตำแหน่งในแนวนอนของจุดเริ่มต้นของเนื้อหา ตำแหน่งของขอบด้านหน้าจะขึ้นอยู่กับการตั้งค่าของคุณ และโดยปกติแล้วจะอิงตามการตั้งค่าตำแหน่งที่ตั้งและภาษาของคุณ
                    ตัวอย่างเช่น ภาษาที่อ่านจากซ้ายไปขวา เช่น อังกฤษหรือดัตช์ ขอบด้านหน้าจะอยู่ทางด้านซ้าย ส่วนภาษาที่อ่านจากขวาไปซ้าย เช่น อาหรับหรือฮีบรู ขอบด้านหน้าจะอยู่ทางด้านขวา</string>
				<key>Title</key>
				<string>ขอบด้านหน้า</string>
			</dict>
		</dict>
		<key>literal</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญพจน์ทำให้คุณสามารถฝังภาพและสีลงในโค้ดของคุณโดยตรงได้โดยใช้คลังภาพหรือตัวเลือกสี สัญพจน์คือค่าที่แท้จริงของข้อมูลของคุณที่แสดงในรูปแบบดั้งเดิมภายในตัวแก้ไขโดยตรง</string>
				<key>Title</key>
				<string>สัญพจน์</string>
			</dict>
		</dict>
		<key>logical AND operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ (`&amp;&amp;`) ที่รวมค่าบูลีนสองค่าเข้าด้วยกัน ซึ่งทั้งสองค่าจะต้องเป็น true เพื่อให้โค้ดทั้งหมดเป็น true ตัวอย่างเช่น `a &amp;&amp; b` จะเป็น true เมื่อ `a` และ `b` เป็น `true`</string>
				<key>Title</key>
				<string>ตัวดำเนินการตรรกะ AND</string>
			</dict>
		</dict>
		<key>logical NOT operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ (`!`) ที่กลับค่าบูลีนของส่วนของโค้ด ตัวอย่างเช่น ถ้า `a` เป็น `true` ดังนั้น `!a` ก็จะเป็น `false`</string>
				<key>Title</key>
				<string>ตัวดำเนินการตรรกะ NOT</string>
			</dict>
		</dict>
		<key>logical OR operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ (`||`) ที่รวมค่าบูลีนสองค่าเข้าด้วยกัน โดยจะต้องมีอย่างน้อยหนึ่งค่าที่เป็น true เพื่อให้โค้ดทั้งหมดเป็น true ตัวอย่างเช่น `a || b` จะเป็น `true` ถ้า `a` หรือ `b` นั้นเป็น `true` (หรือเมื่อทั้งสองค่าเป็น `true`)</string>
				<key>Title</key>
				<string>ตัวดำเนินการตรรกะ OR</string>
			</dict>
		</dict>
		<key>logical operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ต่างๆ เช่น `&amp;&amp;`, `||` หรือ `!` ที่แก้ไขหรือรวมค่าตรรกะบูลีน `true` และ `false`</string>
				<key>Title</key>
				<string>ตัวดำเนินการตรรกะ</string>
			</dict>
		</dict>
		<key>loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ดที่มีการเรียกใช้ซ้ำตามจำนวนครั้งที่กำหนด (เช่น `for` loop) หรือจนกว่าจะตรงตามเงื่อนไข (เช่น `while` loop)</string>
				<key>Title</key>
				<string>loop</string>
			</dict>
		</dict>
		<key>memory</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ส่วนของคอมพิวเตอร์ที่จัดเก็บโค้ดสำหรับแอปพลิเคชันและข้อมูลที่ใช้ ไม่ว่าจะเป็นแบบชั่วคราวหรือแบบถาวร</string>
				<key>Title</key>
				<string>หน่วยความจำ</string>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ฟังก์ชั่น หรือชุดของคำสั่ง ที่มีการกำหนดภายใน[ประเภท](glossary://type)</string>
				<key>Title</key>
				<string>วิธีการ</string>
			</dict>
		</dict>
		<key>modifier</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ใน SwiftUI ปุ่มปรับค่าคือ[วิธีการ](glossary://method)ที่เรียกใช้บนมุมมองเพื่อแก้ไขรูปแบบหรือลักษณะการทำงานของมุมมอง ในการทำให้ปุ่มปรับค่าอ่านง่ายขึ้น ปุ่มปรับค่าแต่ละปุ่มจะถูกวางในแต่ละบรรทัดด้านล่าง[ชื่อแทนประเภท](glossary://instance)มุมมอง</string>
				<key>Title</key>
				<string>ปุ่มปรับค่า</string>
			</dict>
		</dict>
		<key>modulo operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ (`%`) ที่ส่งคืนเป็นเศษหลังจากที่หารหมายเลขหนึ่งด้วยอีกหมายเลขหนึ่ง ตัวอย่างเช่น `17 % 5` จะส่งคืนเศษ `2`</string>
				<key>Title</key>
				<string>ตัวดำเนินการโมดูโล</string>
			</dict>
		</dict>
		<key>navigation bar</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>อินเทอร์เฟซการนำทางให้คุณสามารถเลือกได้หนึ่งตัวเลือกต่อหน้าจอจนกว่าคุณจะไปถึงปลายทาง ในการไปยังปลายทางอื่น คุณต้องย้อนรอยการนำทางของคุณหรือเริ่มต้นใหม่ตั้งแต่ต้นแล้วเลือกตัวเลือกอื่น แถบการนำทางที่ด้านบนสุดของหน้าจอจะแสดงชื่อเรื่องเพื่อช่วยให้คุณจำตำแหน่งที่คุณอยู่ได้ และมีปุ่มย้อนกลับเพื่อให้คุณสามารถกลับไปยังหน้าจอก่อนหน้าได้</string>
				<key>Title</key>
				<string>แถบการนำทาง</string>
			</dict>
		</dict>
		<key>nest</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>วางบล็อกของโค้ด ตัวอย่างเช่น loop ที่ทำซ้ำรายการหนึ่งภายในอีกรายการหนึ่ง</string>
				<key>Title</key>
				<string>การซ้อนโค้ด</string>
			</dict>
		</dict>
		<key>observable object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เมื่อคลาส[สอดคล้อง](glossary://conform)กับโปรโตคอล `ObservableObject` การเปลี่ยนแปลงใดๆ ที่ทำกับค่าที่เผยแพร่จะทำให้มุมมองทั้งหมดที่ใช้ค่าเหล่านั้นอัปเดตโดยอัตโนมัติโดยสะท้อนให้เห็นการเปลี่ยนแปลงนั้น</string>
				<key>Title</key>
				<string>วัตถุที่สังเกตเห็นได้</string>
			</dict>
		</dict>
		<key>observed object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เมื่อคลาส[สอดคล้อง](glossary://conform)กับโปรโตคอล `ObservableObject` การเปลี่ยนแปลงที่ทำกับหนึ่งในค่าที่เผยแพร่ทำให้มุมมองทั้งหมดที่ใช้ค่านั้นอัปเดตโดยอัตโนมัติโดยสะท้อนให้เห็นการเปลี่ยนแปลงนั้น</string>
				<key>Title</key>
				<string>วัตถุที่สังเกตเห็นได้</string>
			</dict>
		</dict>
		<key>observer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในส่วนที่เกี่ยวกับ[วัตถุที่สังเกตเห็นได้](glossary://observable%20object) ตัวสังเกตการณ์คือมุมมองหรือวัตถุที่ใช้ข้อมูลของวัตถุที่สังเกตเห็นได้ เมื่อข้อมูลวัตถุที่สังเกตเห็นได้เปลี่ยนแปลง SwiftUI จะจำการเปลี่ยนแปลงนั้นแล้วสั่งให้ตัวสังเกตการณ์อัปเดต</string>
				<key>Title</key>
				<string>ตัวสังเกตการณ์</string>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>สัญลักษณ์ เช่น `+`, `-` หรือ `&amp;&amp;` ที่แสดงถึงการทำงานกับค่าตั้งแต่หนึ่งค่าขึ้นไป ตัวอย่างเช่น ใน `1 + 2` ตัวดำเนินการบวก (`+`) จะบวกตัวเลข `1` กับ `2`</string>
				<key>Title</key>
				<string>ตัวดำเนินการ</string>
			</dict>
		</dict>
		<key>outer loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ด (loop) ที่ซ้ำกัน ซึ่งมี (inner) loop อื่นอยู่ภายใน</string>
				<key>Title</key>
				<string>outer loop</string>
			</dict>
		</dict>
		<key>parameter</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชื่อของค่า input ของฟังก์ชั่นที่ใช้ในการกำหนดฟังก์ชั่น ตัวอย่างเช่น ใน `move(distance: Int)` นั้น `distance` เป็นพารามิเตอร์ที่ใช้ค่าประเภท Int</string>
				<key>Title</key>
				<string>พารามิเตอร์</string>
			</dict>
		</dict>
		<key>parent view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>มุมมองคอนเทนเนอร์สำหรับ[มุมมองรายการย่อย](glossary://child%20view)อย่างน้อยหนึ่งมุมมอง</string>
				<key>Title</key>
				<string>มุมมองหลัก</string>
			</dict>
		</dict>
		<key>pattern</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชุดของข้อกำหนดหรือข้อมูลที่ซ้ำกัน</string>
				<key>Title</key>
				<string>รูปแบบ</string>
			</dict>
		</dict>
		<key>pitch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในเพลง ระดับเสียงสูงต่ำของโน้ตจะหมายถึงระดับเสียงสูงหรือระดับเสียงต่ำของโน้ตโดยขึ้นอยู่กับความถี่ของการสั่นเป็นหลัก สามารถวัดระดับเสียงสูงต่ำของโน้ตได้เป็น[เฮิรตซ์](glossary://hertz) โดยที่ระดับเสียงสูงต่ำที่สูง (~2000 Hz) อาจมีเสียงคล้ายกับนกหวีด ขณะที่ระดับเสียงสูงต่ำที่ต่ำ (~40 Hz) อาจมีเสียงคล้ายเสียงร้องของวัว</string>
				<key>Title</key>
				<string>ระดับเสียงสูงต่ำ</string>
			</dict>
		</dict>
		<key>primitive</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ในส่วนที่เกี่ยวกับเฟรมเวิร์คการเขียนโปรแกรม เช่น SwiftUI การตั้งต้นคือองค์ประกอบหลักที่เฟรมเวิร์คมีเพื่อเขียนการทำงานหรือ[อินเทอร์เฟซ](glossary://user%20interface)ที่มีความซับซ้อนยิ่งขึ้น
</string>
				<key>Title</key>
				<string>ตั้งต้น</string>
			</dict>
		</dict>
		<key>primitive view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>[มุมมอง](glossary://view)ที่ได้มาจากเฟรมเวิร์ค [SwiftUI](glossary://SwiftUI) เช่น มุมมอง `Button`, `Text` หรือ `Image` มุมมองตั้งต้นจะถูกใช้เป็นองค์ประกอบหลักเพื่อสร้าง[มุมมองที่ถูกประกอบ](glossary://composed%20view)ที่ซับซ้อนมากขึ้นใน[อินเทอร์เฟซผู้ใช้](glossary://user%20interface)ของคุณ</string>
				<key>Title</key>
				<string>มุมมองตั้งต้น</string>
			</dict>
		</dict>
		<key>private</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คำสำคัญ private ทำให้โค้ดใช้ได้เฉพาะภายในไฟล์ต้นทางที่เจาะจงเท่านั้น
- callout(ตัวอย่าง):
`private class MyApp: App { }`</string>
				<key>Title</key>
				<string>private</string>
			</dict>
		</dict>
		<key>property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวแปร (คอนเทนเนอร์ที่มีชื่อและจัดเก็บค่า) ที่มีการกำหนดภายในประเภท</string>
				<key>Title</key>
				<string>คุณสมบัติ</string>
			</dict>
		</dict>
		<key>property wrapper</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ตัวหุ้มคุณสมบัติเป็นวิธีง่ายๆ ในการปรับใช้รูปแบบการทำงานทั่วไปกับคุณสมบัติ ตัวหุ้มนี้เป็นวิธีการใส่คำอธิบายประกอบให้กับคุณสมบัติที่กำหนดวิธีการที่จะจัดเก็บหรือคำนวณคุณสมบัติเมื่ออ่าน   ตัวอย่างเช่น ตัวหุ้มคุณสมบัติ `@State` แจ้งให้ SwiftUI จัดการพื้นที่จัดเก็บข้อมูลสำหรับค่า และให้อัปเดตส่วนต่างๆ ของมุมมองที่ใช้ค่านั้น เมื่อใดก็ตามที่ค่านั้นเปลี่ยนแปลง</string>
				<key>Title</key>
				<string>ตัวหุ้มคุณสมบัติ</string>
			</dict>
		</dict>
		<key>protocol</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ชุดของข้อกำหนด เช่น วิธีการและคุณสมบัติ ที่สามารถรับมาใช้ได้ (หรือติดตาม) โดยประเภท เช่น คลาส โครงสร้าง หรือการกำหนดตัวแปรขึ้นมาใช้เอง   เมื่อประเภทรับโปรโตคอลมาใช้ ประเภทจะระบุการใช้งานของตัวเองสำหรับข้อกำหนดของโปรโตคอล และระบุว่าสอดคล้องกับโปรโตคอลนั้น</string>
				<key>Title</key>
				<string>โปรโตคอล</string>
			</dict>
		</dict>
		<key>pseudocode</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คำอธิบายอัลกอริทึมที่อ่านได้ง่าย ซึ่งปกติจะเขียนโดยใช้ภาษาและโค้ดที่ใช้ในชีวิตประจำวัน</string>
				<key>Title</key>
				<string>ซูโดโค้ด</string>
			</dict>
		</dict>
		<key>public</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คำสำคัญ public ทำให้โค้ดใช้ได้กับทุกไฟล์ในโปรเจ็กต์ของคุณ
                        
- callout(ตัวอย่าง):
`public func decorateWithSticker(space: Space) { }`
                    </string>
				<key>Title</key>
				<string>public</string>
			</dict>
		</dict>
		<key>published value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่ม[ตัวหุ้มคุณสมบัติ](glossary://property%20wrapper) `@Published` เพื่อประกาศคุณสมบัติที่แจ้งเตือน[ตัวสังเกตการณ์](glossary://observer)ทั้งหมดเมื่อค่ากำลังจะเปลี่ยนแปลง เมื่อค่าเปลี่ยนแปลง SwiftUI จะอัปเดตมุมมองทั้งหมดที่ใช้ข้อมูล</string>
				<key>Title</key>
				<string>ค่าที่เผยแพร่</string>
			</dict>
		</dict>
		<key>return type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เมื่อคุณกำหนดฟังก์ชั่น คุณสามารถเลือกที่จะกำหนดประเภทของค่าที่ฟังก์ชั่นจะส่งกลับเป็น output เมื่อทำเสร็จได้ ซึ่งเรียกว่าประเภทของการคืนค่า</string>
				<key>Title</key>
				<string>ประเภทของการคืนค่า</string>
			</dict>
		</dict>
		<key>reusability</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ลักษณะเฉพาะของโค้ดที่ทำให้สามารถใช้โค้ดได้ในสถานการณ์ที่แตกต่างกันภายในแอปพลิเคชัน</string>
				<key>Title</key>
				<string>ความสามารถในการนำมาใช้ใหม่</string>
			</dict>
		</dict>
		<key>root view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>มุมมองที่มุมมองอื่นๆ ทั้งหมดถูกวางไว้ หรือที่เรียกว่า[มุมมองระดับบนสุด](glossary://top-level%20view) มุมมองนี้จะอยู่ที่ด้านบนสุดของ[ลำดับชั้นมุมมอง](glossary://view%20hierarchy)และทำหน้าที่เป็น[มุมมองหลัก](glossary://parent%20view)ไปจนถึง[มุมมองรายการย่อย](glossary://child%20view)ทั้งหมดในลำดับชั้น</string>
				<key>Title</key>
				<string>มุมมองราก</string>
			</dict>
		</dict>
		<key>saturation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ความเข้มข้นของสีสัน จากโทนสีเทาไปจนถึงเต็มไปด้วยสีสัน ความอิ่มตัวจะเป็นค่า Double (เลขทศนิยม) ตั้งแต่ `0` ถึง `1`</string>
				<key>Title</key>
				<string>ความอิ่มตัว</string>
			</dict>
		</dict>
		<key>sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เซ็นเซอร์คืออุปกรณ์ที่ตรวจจับอีเวนต์ต่างๆ เช่น การเปลี่ยนแปลงความร้อน แสง เสียง หรือความเคลื่อนไหว และจะส่งคืนค่ากลับมา</string>
				<key>Title</key>
				<string>เซ็นเซอร์</string>
			</dict>
		</dict>
		<key>source of truth</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>อยู่ในการสร้างแอปโดยเป็นตำแหน่งที่ตั้งเดียวที่มีการแก้ไขข้อมูลทั้งหมด การเชื่อมต่ออื่นๆ ทั้งหมดกับข้อมูลนี้เป็นเพียงการอ้างอิงเท่านั้นซึ่งป้องกันการทำสำเนาข้อมูลในตำแหน่งที่ตั้งอื่น </string>
				<key>Title</key>
				<string>แหล่งข้อมูลจริง</string>
			</dict>
		</dict>
		<key>speech synthesis</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การสร้างเสียงด้วยคอมพิวเตอร์ที่คล้ายคลึงกับเสียงพูดของมนุษย์ ซึ่งโดยปกติสร้างขึ้นจากข้อความ</string>
				<key>Title</key>
				<string>การสังเคราะห์เสียงพูด</string>
			</dict>
		</dict>
		<key>state</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อมูลของตัวแปร แอปพลิเคชัน หรือระบบที่ถูกจัดเก็บในเวลาที่กำหนด</string>
				<key>Title</key>
				<string>สถานะ</string>
			</dict>
		</dict>
		<key>state object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่ม[ตัวหุ้มคุณสมบัติ](glossary://property%20wrapper) `@StateObject` เพื่อประกาศวัตถุสถานะและระบุค่าเริ่มต้นที่สอดคล้องกับ[โปรโตคอล](glossary://protocol) `ObservableObject` SwiftUI จัดการพื้นที่จัดเก็บข้อมูลสำหรับวัตถุสถานะและอัปเดตมุมมองย่อยทั้งหมดที่ใช้ค่านั้นตลอดเวลาที่ค่าที่เผยแพร่เปลี่ยนแปลง</string>
				<key>Title</key>
				<string>วัตถุสถานะ</string>
			</dict>
		</dict>
		<key>state value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เพิ่ม `@State` ก่อนตัวแปรเพื่อบอก SwiftUI ให้จัดการพื้นที่จัดเก็บข้อมูลสำหรับค่า เมื่อค่าเปลี่ยนแปลง SwiftUI จะอัปเดตส่วนใดๆ ของมุมมองที่ใช้ค่านั้น</string>
				<key>Title</key>
				<string>ค่าสถานะ</string>
			</dict>
		</dict>
		<key>statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โครงสร้าง เช่น loop หรือชุดคำสั่ง `if` ที่จัดระเบียบโค้ดในแอปพลิเคชัน</string>
				<key>Title</key>
				<string>ชุดคำสั่ง</string>
			</dict>
		</dict>
		<key>string component</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ส่วนหรือสตริงย่อยของสตริง หลังจากที่สตริงถูกแยกออกเป็นส่วนๆ ด้วยตัวแยกแล้ว ตัวอย่างเช่น ถ้าสตริง `"dog+cat+fish"` ถูกแยกออกด้วยตัวแยก `"+"` ส่วนประกอบผลลัพธ์ที่ออกมาก็จะเป็นสตริง `"dog"`, `"cat"` และ `"fish"`</string>
				<key>Title</key>
				<string>ส่วนประกอบสตริง</string>
			</dict>
		</dict>
		<key>string concatenation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การปฏิบัติการของการรวมสตริงโดยการเพิ่มสตริงหนึ่งสตริงไปยังจุดสิ้นสุดของอีกสตริงหนึ่ง ตัวอย่างเช่น การเรียงต่อกันของ`"foot"` และ `"ball"` ก็คือ `"football"`</string>
				<key>Title</key>
				<string>การเรียงต่อกันของสตริง</string>
			</dict>
		</dict>
		<key>string interpolation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การใช้ค่าคงที่ ตัวแปร หรือนิพจน์โค้ดภายในสตริงที่ยาวกว่านั้นก็เพื่อแทนที่ด้วยค่าปัจจุบันเมื่อประเมินสตริง ตัวอย่างเช่น ในสตริง `"Katy ate a \(fruit)."` ถ้า `fruit` คือตัวแปรของค่า `"peach"` ดังนั้น `\(fruit)` จะถูกแทนที่โดย `"peach"` เมื่อสตริงถูกหาค่า ซึ่งจะทำให้กลายเป็น `"Katy ate a peach."`</string>
				<key>Title</key>
				<string>การสอดแทรกสตริง</string>
			</dict>
		</dict>
		<key>syntax</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>กฎสำหรับการเขียนโค้ดที่คอมพิวเตอร์สามารถเข้าใจและรันได้</string>
				<key>Title</key>
				<string>ไวยากรณ์</string>
			</dict>
		</dict>
		<key>top-level view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>มุมมองที่มุมมองอื่นๆ ทั้งหมดถูกวางไว้ หรือที่เรียกว่า [มุมมองราก](glossary://root%20view) มุมมองนี้จะอยู่ที่ด้านบนสุดของ[ลำดับชั้นมุมมอง](glossary://view%20hierarchy)และทำหน้าที่เป็น[มุมมองหลัก](glossary://parent%20view)ไปจนถึง[มุมมองรายการย่อย](glossary://child%20view)ทั้งหมดในลำดับชั้น</string>
				<key>Title</key>
				<string>มุมมองระดับบนสุด</string>
			</dict>
		</dict>
		<key>trailing edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เมื่อใช้ในการอ้างอิงถึงเนื้อหาภายในมุมมอง ขอบด้านหลังจะหมายถึงตำแหน่งในแนวนอนของจุดสิ้นสุดของเนื้อหา ตำแหน่งของขอบด้านหลังจะขึ้นอยู่กับการตั้งค่าของคุณ และโดยปกติแล้วจะอิงตามการตั้งค่าตำแหน่งที่ตั้งและภาษาของคุณ
                    ตัวอย่างเช่น ภาษาที่อ่านจากซ้ายไปขวา เช่น อังกฤษหรือดัตช์ ขอบด้านหลังจะอยู่ทางด้านขวา ส่วนภาษาที่อ่านจากขวาไปซ้าย เช่น อาหรับหรือฮีบรู ขอบด้านหลังจะอยู่ทางด้านซ้าย</string>
				<key>Title</key>
				<string>ขอบด้านหน้า</string>
			</dict>
		</dict>
		<key>type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>การจัดกลุ่มคุณสมบัติ (คุณสมบัติเด่น) และวิธีการ (ลักษณะการทำงาน) ที่มีชื่อของข้อมูลประเภทหนึ่ง</string>
				<key>Title</key>
				<string>ประเภท</string>
			</dict>
		</dict>
		<key>typography</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ศิลปะและเทคนิคของการจัดเรียงค่าประเภทเพื่อทำให้ภาษาที่เขียนถูกต้อง อ่านได้ และดูสวยงามเมื่อถูกแสดง</string>
				<key>Title</key>
				<string>ตัวพิมพ์</string>
			</dict>
		</dict>
		<key>user input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ข้อมูลที่แอปพลิเคชันได้รับจากการปฏิสัมพันธ์กับผู้ใช้ เช่น จากการที่ผู้ใช้แตะหน้าจอ ป้อนข้อความด้วยแป้นพิมพ์ หรือพูดเข้าไปในไมโครโฟน 
</string>
				<key>Title</key>
				<string>input ของผู้ใช้</string>
			</dict>
		</dict>
		<key>user interface</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>วิธีการที่ผู้ใช้ควบคุมแอป ซึ่งเรียกอีกอย่างว่า "UI" คำนี้มักใช้เพื่ออ้างอิงถึงส่วนที่มองเห็นได้ของแอปที่ผู้ใช้โต้ตอบด้วย โดยมีองค์ประกอบต่างๆ เช่น ภาพ ข้อความ ปุ่ม แถบเลื่อน มุมมองแถบเลื่อน และอื่นๆ</string>
				<key>Title</key>
				<string>อินเทอร์เฟซผู้ใช้</string>
			</dict>
		</dict>
		<key>variable</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>คอนเทนเนอร์ที่มีชื่อซึ่งจัดเก็บค่าที่สามารถเปลี่ยนแปลงได้</string>
				<key>Title</key>
				<string>ตัวแปร</string>
			</dict>
		</dict>
		<key>velocity</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ความเร็วของสิ่งใดสิ่งหนึ่งในทิศทางที่กำหนด</string>
				<key>Title</key>
				<string>อัตราเร็ว</string>
			</dict>
		</dict>
		<key>view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>มุมมองเป็นองค์ประกอบหลักของอินเทอร์เฟซผู้ใช้ของแอปของคุณ และแสดงถึงส่วนที่มองเห็นได้ที่[สอดคล้อง](glossary://conform)กับ[โปรโตคอล](glossary://protocol) `View`

ตัวอย่างส่วนหนึ่งของมุมมองใน SwiftUI ได้แก่ มุมมองข้อความ มุมมองภาพ แถบเลื่อน ตาราง ปุ่ม และรูปร่าง</string>
				<key>Title</key>
				<string>มุมมอง</string>
			</dict>
		</dict>
		<key>view hierarchy</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>โครงสร้างที่กำหนดเค้าโครงของมุมมองที่สัมพันธ์กับมุมมองอื่น ซึ่งอ้างอิงถึงชื่อแทนประเภทของมุมมองระดับบนสุดที่อยู่ด้านบนสุดของลำดับชั้น มุมมองระดับบนสุดอาจมีมุมมองย่อยจำนวนเท่าใดก็ได้ โดยแต่ละมุมมองอาจมีมุมมองรายการย่อยของตัวเอง เป็นต้น</string>
				<key>Title</key>
				<string>ลำดับชั้นมุมมอง</string>
			</dict>
		</dict>
		<key>volume</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ระดับเสียงคือความดังของเสียงที่ตรวจพบโดย[เซ็นเซอร์](glossary://sensor) มีช่วงอยู่ที่ระหว่าง 0 ถึง 1</string>
				<key>Title</key>
				<string>ระดับเสียง</string>
			</dict>
		</dict>
		<key>while loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>บล็อกของโค้ดที่จะรันตราบใดที่เงื่อนไขที่กำหนดเป็น `true` เมื่อเงื่อนไขเปลี่ยนเป็น `false` แล้ว loop นั้นจะหยุดรัน</string>
				<key>Title</key>
				<string>while loop</string>
			</dict>
		</dict>
		<key>wireframe</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>เค้าโครงของวัตถุ เช่น เพชร สวิตช์ หรือบล็อก ในโลกปริศนา โดยจะมีการใช้ไวร์เฟรมเพื่อระบุความเป็นไปได้ที่วัตถุจะปรากฏในลักษณะสุ่มทุกๆ ครั้งที่มีการรันปริศนา</string>
				<key>Title</key>
				<string>ไวร์เฟรม</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
