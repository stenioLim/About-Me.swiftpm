<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Alpha</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met alfa, of *alfakanaal*, wordt de doorzichtigheid van een kleur aangeduid. De waarde ligt tussen `0` (volledig doorzichtig) en `1` (volledig ondoorzichtig). De alfagegevens worden weergegeven als een double (decimaal getal) tussen 0 en 1.</string>
				<key>Title</key>
				<string>alfa</string>
			</dict>
		</dict>
		<key>Boolean</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type dat de waarde `true` of `false` heeft. Bijvoorbeeld: `9 &lt; 7` retourneert de Booleaanse waarde `false` omdat `9` niet kleiner is dan `7`.</string>
				<key>Title</key>
				<string>Booleaanse waarde</string>
			</dict>
		</dict>
		<key>Double</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type waarin getallen worden opgeslagen die een gedeelte achter de komma hebben, zoals 3.14. Let op: in Swift wordt als decimaalteken een punt (.) gebruikt en geen komma (,).</string>
				<key>Title</key>
				<string>Double</string>
			</dict>
		</dict>
		<key>Int</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type waarin een geheel getal is opgeslagen, zoals `10` of `-42`.</string>
				<key>Title</key>
				<string>Int</string>
			</dict>
		</dict>
		<key>String</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type waarin een reeks tekens is opgeslagen, zoals `"hallo, wereld"` of `"dansende katten"`.</string>
				<key>Title</key>
				<string>String</string>
			</dict>
		</dict>
		<key>Swift</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De programmeertaal van Apple voor het schrijven van apps voor de iPhone, iPad, Mac, Apple Watch en Apple TV.</string>
				<key>Title</key>
				<string>Swift</string>
			</dict>
		</dict>
		<key>SwiftUI</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>SwiftUI is een moderne manier om gebruikersinterfaces voor elk Apple platform te declareren. Het biedt weergaven, regelaars en lay-outstructuren voor het declareren van de gebruikersinterface van je app. Het framework biedt eventhandlers voor het afleveren van tikken, gebaren en andere soorten invoer aan je app, en tools om de gegevensstroom te beheren van de modellen van je app naar de weergaven en bedieningselementen die gebruikers zien en gebruiken.</string>
				<key>Title</key>
				<string>SwiftUI</string>
			</dict>
		</dict>
		<key>absolute value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De waarde zonder teken van een getal. Bijvoorbeeld: de absolute waarde van -12 is 12 en de absolute waarde van 23.4 is 23.4.</string>
				<key>Title</key>
				<string>absolute waarde</string>
			</dict>
		</dict>
		<key>abstraction</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een vereenvoudigde versie van een complex gegeven.   Een abstractie verbergt details zodat je eenvoudiger over je code kunt nadenken en delen van je code kunt combineren.   Zo is een [type](glossary://type) een abstractie die de configuratie, eigenschappen en methoden van een instantie van dat type verbergt.</string>
				<key>Title</key>
				<string>abstractie</string>
			</dict>
		</dict>
		<key>accelerometer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een sensor die de versnelling van je apparaat in drie dimensies meet: omhoog en omlaag, vooruit en achteruit, en links en rechts.</string>
				<key>Title</key>
				<string>versnellingsmeter</string>
			</dict>
		</dict>
		<key>adopt</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Om een protocol te adopteren, biedt een type een reeks eigen implementaties voor de vereisten van het protocol, zoals de vermelde methoden en eigenschappen.</string>
				<key>Title</key>
				<string>adopteren</string>
			</dict>
		</dict>
		<key>algorithm</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een set stapsgewijze instructies of regels voor het oplossen van een probleem. Bijvoorbeeld: een recept voor het maken van een taart zou je kunnen beschouwen als een algoritme.</string>
				<key>Title</key>
				<string>algoritme</string>
			</dict>
		</dict>
		<key>append</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Iets aan het einde van iets toevoegen. Bijvoorbeeld: je kunt een string aan het einde van een andere string toevoegen of een onderdeel aan het einde van een array met onderdelen toevoegen.
</string>
				<key>Title</key>
				<string>aan het einde toevoegen</string>
			</dict>
		</dict>
		<key>application</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Software, die is opgebouwd uit code, waarmee je specifieke taken kunt uitvoeren. Bijvoorbeeld: je gebruikt de app Berichten om berichten te versturen en ontvangen.</string>
				<key>Title</key>
				<string>app</string>
			</dict>
		</dict>
		<key>argument</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een invoerwaarde die wordt doorgegeven aan een functie om het gedrag ervan aan te passen. Bijvoorbeeld: in de functie-aanroep `move(distance: 3)` is het getal `3` een argument waarmee het aantal posities van de verplaatsing wordt aangegeven.</string>
				<key>Title</key>
				<string>argument</string>
			</dict>
		</dict>
		<key>arithmetic operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool, zoals `+`, `-`, `*` of `/`, waarmee een eenvoudige wiskundige bewerking wordt uitgevoerd op een of meer getallen. Bijvoorbeeld:  `42 / 7` en `17 - 5` maken gebruik van rekenkundige operatoren.</string>
				<key>Title</key>
				<string>rekenkundige operator</string>
			</dict>
		</dict>
		<key>array</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een verzameling waarin een geordende lijst met onderdelen van hetzelfde type wordt opgeslagen. Hetzelfde onderdeel kan meerdere keren op verschillende posities voorkomen. Bijvoorbeeld: `highScores = [37, 34, 29, 29, 26]` is een array met [gehele getallen](glossary://Int).</string>
				<key>Title</key>
				<string>array</string>
			</dict>
		</dict>
		<key>asset</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Bronbestanden zijn afbeeldingen, geluiden en andere onderdelen die je app gebruikt. Je kunt bronbestanden in Swift Playgrounds importeren vanuit andere apps, zoals Bestanden en Foto's.</string>
				<key>Title</key>
				<string>bronbestand</string>
			</dict>
		</dict>
		<key>assignment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een bewerking waarmee de waarde van een variabele of constante wordt ingesteld.</string>
				<key>Title</key>
				<string>toewijzing</string>
			</dict>
		</dict>
		<key>assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het symbool `=` wordt gebruikt om de waarde van een variabele in te stellen. Bijvoorbeeld: met `groet = "hallo"` stel je de waarde van `groet` in op `"hallo"`.</string>
				<key>Title</key>
				<string>toewijzings­operator</string>
			</dict>
		</dict>
		<key>asynchronous process</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een codeblok dat kan worden uitgevoerd terwijl de rest van de app of het programma wordt uitgevoerd. In tegenstelling tot een synchroon proces, waarbij de uitvoering van het programma wordt geblokkeerd tot het voltooid is, kan een asynchroon proces tegelijk met de rest van je appcode worden uitgevoerd.</string>
				<key>Title</key>
				<string>asynchroon proces</string>
			</dict>
		</dict>
		<key>binding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voeg de [eigenschapwrapper](glossary://property%20wrapper) `@Binding` toe om een tweerichtingsverbinding te maken tussen een eigenschap die gegevens opslaat en een weergave die de gegevens weergeeft en wijzigt. Een binding verbindt een eigenschap met een bron van waarheid die ergens anders is opgeslagen, in plaats van gegevens direct op te slaan. 

Zo kan een knop die tussen afspelen en pauzeren schakelt een binding aanmaken met een eigenschap van de bovenliggende weergave met behulp van de eigenschapwrapper `@Binding`.
</string>
				<key>Title</key>
				<string>binding</string>
			</dict>
		</dict>
		<key>body</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In de body van een [weergave](glossary://view) geef je de inhoud van de weergave op. Deze inhoud bestaat uit ten minste één door SwiftUI aangeboden [primitieve weergave](glossary://primitive%20view) of alle [samengestelde weergaven](glossary://composed%20view) die je al hebt aangemaakt.</string>
				<key>Title</key>
				<string>body</string>
			</dict>
		</dict>
		<key>bounds</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De reeks waarden die een index voor een array kan hebben. Zo kan de array `[17, 42, 95]` de indexwaarden 0 tot en met 2 hebben. Bereikcontrole wordt uitgevoerd om te controleren of een indexwaarde binnen het bereik van een array ligt.</string>
				<key>Title</key>
				<string>bereik</string>
			</dict>
		</dict>
		<key>brightness</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De hoeveelheid licht die de camera ontvangt, variërend van `0` (geen licht) tot `1` (maximale hoeveelheid licht). De helderheid wordt weergegeven als een [Double](glossary://Double) (decimaal getal) tussen `0` en `1`.</string>
				<key>Title</key>
				<string>helderheid</string>
			</dict>
		</dict>
		<key>bug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een programmeerfout waardoor een app niet goed werkt. 
</string>
				<key>Title</key>
				<string>bug</string>
			</dict>
		</dict>
		<key>bundle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een representatie van de code en bronnen die zijn opgeslagen in een bundeldirectory op de schijf. De resources in bronnen zijn strak gestructureerd in subdirectory's en bundelstructuren variëren afhankelijk van het platform en het type bundel. Door een bundelobject te gebruiken, krijg je toegang tot de resources van een bundel zonder de structuur van de bundel te kennen.</string>
				<key>Title</key>
				<string>bundel</string>
			</dict>
		</dict>
		<key>call</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een functie in de code aanroepen om die functie te starten en de daarin gedefinieerde acties uit te voeren.</string>
				<key>Title</key>
				<string>aanroepen</string>
			</dict>
		</dict>
		<key>child view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een weergave die zich in een [bovenliggende weergave](glossary://parent%20view) bevindt. Een bovenliggende weergave kan een willekeurig aantal onderliggende weergaven bevatten, die elk hun eigen onderliggende weergaven kunnen bevatten, enzovoort. Een weergave met alle onderliggende weergaven tezamen vormt een [weergavehiërarchie](glossary://view%20hierarchy).</string>
				<key>Title</key>
				<string>onderliggende weergave</string>
			</dict>
		</dict>
		<key>class</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een klasse is een container voor code die fungeert als een blauwdruk voor het maken van meerdere kopieën van hetzelfde soort ding. Net zoals een blauwdruk bijvoorbeeld de kenmerken en gedragingen van een object, zoals een fiets, zou kunnen definiëren, definieert een klasse deze als [eigenschappen](glossary://property) en [methoden](glossary://method).

Wanneer je een nieuwe kopie of [instantie](glossary://instance) van een klasse maakt, bevat die instantie alle eigenschappen en methoden van je blauwdruk. De waarden van elke instantie kunnen echter onafhankelijk worden gewijzigd, zodat je zelf kunt bepalen hoe elke kopie zich gedraagt. Een klasse "fiets" kan bijvoorbeeld een eigenschap "kleur" hebben, waarmee je zowel rode als blauwe fietsen kunt maken.</string>
				<key>Title</key>
				<string>klasse</string>
			</dict>
		</dict>
		<key>closure</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Closures zijn [functies](glossary://function) die ter plekke worden uitgevoerd zonder dat ze een naam nodig hebben.
					
```
scene.setOnStartHandler {
    // Body van de closure
}
```
                    
Closures kunnen verwijzingen naar constanten en variabelen vastleggen en opslaan vanuit de context waarin ze zijn gedefinieerd. In het Engels heet dit ook wel het "closing over" van die constanten en variabelen.</string>
				<key>Title</key>
				<string>closure</string>
			</dict>
		</dict>
		<key>code comment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met commentaren kunnen programmeurs hun code documenteren.   Je begint een commentaar van één regel met twee schuine strepen gevolgd door een spatie, bijvoorbeeld "// Dit is mijn commentaar."   Wanneer je je code uitvoert, wordt het commentaar genegeerd.</string>
				<key>Title</key>
				<string>commentaar bij code</string>
			</dict>
		</dict>
		<key>code expression</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een stukje code dat kan worden geëvalueerd waarna er een waarde wordt geretourneerd. Als `months` bijvoorbeeld een array met 12 onderdelen is, retourneert de code-uitdrukking `months.count - 1` de waarde `11`.</string>
				<key>Title</key>
				<string>code-uitdrukking</string>
			</dict>
		</dict>
		<key>coding</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het samenstellen van commando's, codestructuren en algoritmen om een app te maken.</string>
				<key>Title</key>
				<string>programmeren</string>
			</dict>
		</dict>
		<key>collection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een gegevensstructuur, zoals een array of dictionary, waarin meerdere gegevens worden bewaard.</string>
				<key>Title</key>
				<string>verzameling</string>
			</dict>
		</dict>
		<key>command</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Code die een app opdracht geeft om een bepaalde bewerking uit te voeren. </string>
				<key>Title</key>
				<string>commando</string>
			</dict>
		</dict>
		<key>comment out</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voorkomen dat een regel code wordt uitgevoerd door de regel om te zetten in [commentaar bij code](glossary://code%20comment). Je kunt dit doen door `//` voor een regel code te zetten. Bijvoorbeeld:
                
`// level.run()`</string>
				<key>Title</key>
				<string>uitcommentariëren</string>
			</dict>
		</dict>
		<key>comparison operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool, zoals `==`, `!=`, `&lt;`, `&gt;`, `&lt;=` of `&gt;=`, dat wordt gebruikt om twee waarden te vergelijken. Een vergelijkingsoperator kan worden gebruikt in een voorwaarde van een `if`-instructie of `while`-lus om een Booleaanse waarde te retourneren die aangeeft of een vergelijking `true` is. Bijvoorbeeld: `6 &gt; 8` vergelijkt `6` met `8` en retourneert `false`.</string>
				<key>Title</key>
				<string>vergelijkings­operator</string>
			</dict>
		</dict>
		<key>compiler error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Compilatiefouten worden veroorzaakt door onjuistheden in de code. Ze worden aangeduid met een rode stip in de linkermarge en in de knoppenbalk.</string>
				<key>Title</key>
				<string>compilatiefout</string>
			</dict>
		</dict>
		<key>composed view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een [weergave](glossary://view) die is aangemaakt door een of meer [primitieve](glossary://primitive%20view) of samengestelde weergaven te combineren.
</string>
				<key>Title</key>
				<string>samengestelde weergave</string>
			</dict>
		</dict>
		<key>composition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het proces van het combineren van kleine delen van een app om grotere delen te vormen die eenvoudiger zijn om mee te werken en te begrijpen.</string>
				<key>Title</key>
				<string>samenstelling</string>
			</dict>
		</dict>
		<key>compound assignment operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een operator die toewijzing (het instellen van de waarde van een variabele) combineert met een andere bewerking, zoals optellen of aftrekken. Bijvoorbeeld: als `a` de waarde `1` heeft en je `a += 3` gebruikt, wordt `3` opgeteld bij `1` en wordt het resultaat toegewezen aan `a`, waardoor de waarde van `a` verandert in `4`.</string>
				<key>Title</key>
				<string>gecombineerde toewijzings­operator</string>
			</dict>
		</dict>
		<key>computed property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In plaats van een waarde direct op te slaan, berekent een berekende eigenschap een waarde op basis van de huidige status van andere gerelateerde waarden wanneer deze worden opgehaald.

In het onderstaande voorbeeld is area een berekende eigenschap, terwijl `width` en `height` opgeslagen eigenschappen zijn:

```
struct RectangleCalculator { 
    var width = 10.0
    var height = 10.0
    
    var area : Double { 
        return width * height
    }
} 
```</string>
				<key>Title</key>
				<string>berekende eigenschap</string>
			</dict>
		</dict>
		<key>conditional code</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Code die wordt uitgevoerd wanneer er aan bepaalde voorwaarden is voldaan. Bijvoorbeeld: `if`-instructies en `while`-lussen bevatten voorwaardelijke code die alleen wordt uitgevoerd als of zolang een voorwaarde `true` is.</string>
				<key>Title</key>
				<string>voorwaardelijke code</string>
			</dict>
		</dict>
		<key>conform</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type conformeert zich aan een protocol wanneer het zijn eigen implementatie van de vereisten van dat protocol biedt.</string>
				<key>Title</key>
				<string>conformeren</string>
			</dict>
		</dict>
		<key>constant</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een benoemde container waarin een waarde is opgeslagen die niet kan worden gewijzigd.</string>
				<key>Title</key>
				<string>constante</string>
			</dict>
		</dict>
		<key>container</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een container, ook wel bekend als een [bovenliggende weergave](glossary://parent%20view), is een weergave met andere weergaven erin.</string>
				<key>Title</key>
				<string>container</string>
			</dict>
		</dict>
		<key>coordinates</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een serie getallen waarmee een unieke positie in een ruimte kan worden bepaald. Zo zijn (100, -200) coördinaten voor een punt in een tweedimensionale ruimte, waarbij de x-coördinaat 100 en de y-coördinaat -200 is.</string>
				<key>Title</key>
				<string>coördinaten</string>
			</dict>
		</dict>
		<key>data</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Informatie die door een computer wordt verwerkt of opgeslagen en die verschilt van de code die op deze informatie wordt toegepast.</string>
				<key>Title</key>
				<string>gegevens</string>
			</dict>
		</dict>
		<key>debug</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het zoeken en corrigeren van programmeerfouten die ervoor zorgen dat een app niet goed werkt. </string>
				<key>Title</key>
				<string>debuggen</string>
			</dict>
		</dict>
		<key>declaration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een stukje code waarmee je iets nieuws in je app introduceert, zoals een functie, variabele of aangepast type. Bijvoorbeeld: met `let planet = "Earth"` declareer je een nieuwe constante, `planet`, en ken je hieraan de waarde `"Earth"` toe.</string>
				<key>Title</key>
				<string>declaratie</string>
			</dict>
		</dict>
		<key>decomposition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het opdelen van een groot probleem in kleinere, beter handelbare stukjes.</string>
				<key>Title</key>
				<string>ontleding</string>
			</dict>
		</dict>
		<key>decrement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een getal verlagen met een geheel getal, vaak 1.</string>
				<key>Title</key>
				<string>verlagen</string>
			</dict>
		</dict>
		<key>define</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De expliciete waarde of het expliciete gedrag opgeven van een nieuw stukje code, zoals een functie, variabele of aangepast type. Bijvoorbeeld: je definieert de werking van een functie door een set commando's toe te voegen aan de functie.</string>
				<key>Title</key>
				<string>definiëren</string>
			</dict>
		</dict>
		<key>dot notation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een soort syntaxis die wordt gebruikt om de eigenschappen te benaderen of de methoden aan te roepen van een instantie. Bijvoorbeeld: in `expert.toggleSwitch()` wordt de methode `toggleSwitch()` van de instantie `expert` aangeroepen.</string>
				<key>Title</key>
				<string>puntnotatie</string>
			</dict>
		</dict>
		<key>efficiency</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een maat die aangeeft hoe goed een stukje code is in het snel uitvoeren van het beoogde doel waarbij er zo min mogelijk resources, zoals geheugen of stroom, worden gebruikt.</string>
				<key>Title</key>
				<string>efficiëntie</string>
			</dict>
		</dict>
		<key>else block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het laatste blok code in een `if`-instructie. Het `else`-blok wordt uitgevoerd als alle voorwaarden in de `if`-instructie `false` zijn.</string>
				<key>Title</key>
				<string>else-blok</string>
			</dict>
		</dict>
		<key>else if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een blok code in een `if`-instructie dat wordt gebruikt om een voorwaarde te controleren die niet wordt gecontroleerd door het `if`-blok of een ander `else if`-blok.</string>
				<key>Title</key>
				<string>else if-blok</string>
			</dict>
		</dict>
		<key>enumeration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een type waarmee een set unieke maar gerelateerde waarden wordt gedefinieerd, de zogenaamde *opsommingsvariaties*. Bijvoorbeeld: met de opsomming `Direction` worden variaties gedefinieerd voor elke hoofdwindrichting: `north`, `south`, `east` en `west`. Wanneer je een opsomming aan een variabele of constante toekent, kies je altijd maar één van de variaties, bijvoorbeeld `let compassDirection: Direction = .north`.</string>
				<key>Title</key>
				<string>opsomming</string>
			</dict>
		</dict>
		<key>environment object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voeg de [eigenschapwrapper](glossary://property%20wrapper) `@EnvironmentObject` toe om een observeerbare objecteigenschap te declareren die door een bovenliggende weergave wordt geboden. Als je een eigenschap als omgevingsobject declareert, zorg er dan voor dat je een overeenkomende modelinstantie op een bovenliggende weergave instelt door de modifier `environmentObject(_:)` ervan aan te roepen.</string>
				<key>Title</key>
				<string>omgevingsobject</string>
			</dict>
		</dict>
		<key>event</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een actie die kan worden gedetecteerd door een computerapp. Met invoer, zoals drukken op een knop of roteren van het scherm, wordt een event geïnitieerd.</string>
				<key>Title</key>
				<string>event</string>
			</dict>
		</dict>
		<key>event handler</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een functie die wordt aangeroepen nadat een event heeft plaatsgevonden om het event af te handelen.</string>
				<key>Title</key>
				<string>eventhandler</string>
			</dict>
		</dict>
		<key>filtering</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Gegevens in een verzameling of gegevensstructuur verwerken zodat een nieuwe gegevensset ontstaat.</string>
				<key>Title</key>
				<string>filteren</string>
			</dict>
		</dict>
		<key>font</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een groep teksttekens met een specifiek ontwerp, gewicht en formaat. Het ontwerp van een lettertype wordt het *letterbeeld* genoemd en variaties in dit ontwerp worden samen de *lettertypeset* genoemd. Bijvoorbeeld: HelveticaNeue is een letterbeeld en 10-punts HelveticaNeue-Bold is een lettertype.</string>
				<key>Title</key>
				<string>lettertype</string>
			</dict>
		</dict>
		<key>for loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een blok herhaalde code dat een bepaald aantal keren wordt uitgevoerd.</string>
				<key>Title</key>
				<string>for-lus</string>
			</dict>
		</dict>
		<key>full function name</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De volledige naam van een functie, inclusief de namen van de bijbehorende parameters gescheiden door dubbele punten (`:`). Bijvoorbeeld: `move(to:duration:)`.</string>
				<key>Title</key>
				<string>volledige functienaam</string>
			</dict>
		</dict>
		<key>function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een benoemde set [commando's](glossary://command) die op elk gewenst moment kan worden uitgevoerd.</string>
				<key>Title</key>
				<string>functie</string>
			</dict>
		</dict>
		<key>function definition</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In een functiedefinitie wordt beschreven wat een functie doet, wat de functie verwacht te ontvangen en wat de functie retourneert als deze klaar is.</string>
				<key>Title</key>
				<string>functiedefinitie</string>
			</dict>
		</dict>
		<key>global function</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een functie die toegankelijk is vanuit elk bestand in je project.</string>
				<key>Title</key>
				<string>globale functie</string>
			</dict>
		</dict>
		<key>global variable</key>
		<dict>
			<key>FirstUse</key>
			<dict>
				<key>PageReference</key>
				<string></string>
				<key>_LOCALIZABLE_</key>
				<dict>
					<key>Title</key>
					<string></string>
				</dict>
			</dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een variabele die toegankelijk is vanuit elk bestand in je project.</string>
				<key>Title</key>
				<string>globale variabele</string>
			</dict>
		</dict>
		<key>grayscale</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een reeks grijstinten, variërend van wit tot zwart.</string>
				<key>Title</key>
				<string>grijsschaal</string>
			</dict>
		</dict>
		<key>gyroscope</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een sensor die de oriëntatie van je apparaat in drie dimensies meet: de kanteling van voor naar achter, de kanteling van links naar rechts en de rotatie rond het midden.</string>
				<key>Title</key>
				<string>gyroscoop</string>
			</dict>
		</dict>
		<key>hertz</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Hertz (Hz) is één cyclus per seconde. Bij geluidstrillingen staat 1 Hz voor één geluidsgolf per seconde. Mensen kunnen geluiden tussen 20 Hz en 16.000 Hz horen.</string>
				<key>Title</key>
				<string>hertz</string>
			</dict>
		</dict>
		<key>hue</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De schakering van een kleur op het kleurenwiel. Wordt weergegeven als een decimaal getal (double) tussen `0` en `1`.</string>
				<key>Title</key>
				<string>tint</string>
			</dict>
		</dict>
		<key>if block</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het eerste blok code in een `if`-instructie. Het `if`-blok wordt uitgevoerd als de voorwaarde in de `if`-instructie `true` is.</string>
				<key>Title</key>
				<string>if-blok</string>
			</dict>
		</dict>
		<key>if statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een structuur die wordt gebruikt om code uit te voeren op basis van de waarde van een of meer voorwaarden. Het eerste blok code in een `if`-instructie is het `if`-blok. Een `if`-instructie kan ook andere blokken bevatten voor aanvullende toetsingen, zoals een `else`-blok en een `else if`-blok.</string>
				<key>Title</key>
				<string>if-instructie</string>
			</dict>
		</dict>
		<key>increment</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een getal verhogen met een geheel getal, vaak 1.</string>
				<key>Title</key>
				<string>verhogen</string>
			</dict>
		</dict>
		<key>index</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een getal waarmee de positie van een onderdeel in een [array](glossary://array) wordt aangegeven.</string>
				<key>Title</key>
				<string>index</string>
			</dict>
		</dict>
		<key>index out of range error</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een fout die optreedt als er wordt geprobeerd om een array te benaderen via een index die buiten het bereik van die array ligt. Bijvoorbeeld: de index `2` ligt buiten het bereik van de array `[17, 42]`.</string>
				<key>Title</key>
				<string>index buiten bereik-fout</string>
			</dict>
		</dict>
		<key>initialization</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een nieuwe instantie van een type aanmaken, waarbij de beginwaarden voor de eigenschappen van het type worden ingesteld.</string>
				<key>Title</key>
				<string>initialisatie</string>
			</dict>
		</dict>
		<key>initializer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een initializer wordt aangeroepen om een nieuwe [instantie](glossary://instance) van een type aan te maken. De initializer moet alle initiële waarden voor de eigenschappen van het type instellen en bevat vaak ook andere configuratiecode.</string>
				<key>Title</key>
				<string>initializer</string>
			</dict>
		</dict>
		<key>inner loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een herhaald blok code (een lus) dat in een andere lus (buitenste lus) is genest.</string>
				<key>Title</key>
				<string>binnenste lus</string>
			</dict>
		</dict>
		<key>instance</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een waarde van een bepaald [type](glossary://type). Bijvoorbeeld: in `let motion = MotionSensor()`, is `motion` een instantie van het type `MotionSensor`.</string>
				<key>Title</key>
				<string>instantie</string>
			</dict>
		</dict>
		<key>iteration</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het herhalen van een proces, zoals het uitvoeren van dezelfde bewerking voor elk onderdeel in een array.</string>
				<key>Title</key>
				<string>iteratie</string>
			</dict>
		</dict>
		<key>lag</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een afname van de snelheid of responstijd van een app als gevolg van vereisten voor de verwerking, processorkracht of beide.</string>
				<key>Title</key>
				<string>vertraging</string>
			</dict>
		</dict>
		<key>leading edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De voorste rand in de context van de inhoud in een weergave verwijst deze naar de horizontale positie van het begin van de inhoud. De positie van de voorste rand is afhankelijk van je voorkeuren en is doorgaans gebaseerd op je land- en taalinstellingen.
                    Bij talen die van links naar rechts worden geschreven, zoals Engels of Nederlands, bevindt de voorste rand zich aan de linkerkant. Bij talen die van rechts naar links worden geschreven, zoals Arabisch of Hebreeuws, bevindt de voorste rand zich aan de rechterkant.</string>
				<key>Title</key>
				<string>voorste rand</string>
			</dict>
		</dict>
		<key>literal</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met literals kun je afbeeldingen en kleuren direct in de code inbedden met behulp van de afbeeldingsbibliotheek of kleurenkiezer. Literals zijn de eigenlijke waarden van je gegevens die in de eigen structuur direct in de editor worden weergegeven.</string>
				<key>Title</key>
				<string>literal</string>
			</dict>
		</dict>
		<key>logical AND operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool (`&amp;&amp;`) waarmee twee Booleaanse waarden worden gecombineerd. De algehele code is alleen waar als beide waarden waar zijn. Bijvoorbeeld: `a &amp;&amp; b` is alleen waar wanneer zowel `a` als `b` waar zijn.</string>
				<key>Title</key>
				<string>logische AND-operator</string>
			</dict>
		</dict>
		<key>logical NOT operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool (`!`) waarmee de Booleaanse waarde van een stukje code wordt omgekeerd. Bijvoorbeeld: als `a` de waarde `true` heeft, dan is`!⁠a` dus `false`.</string>
				<key>Title</key>
				<string>logische NOT-operator</string>
			</dict>
		</dict>
		<key>logical OR operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool (`||`) waarmee twee Booleaanse waarden worden gecombineerd. De algehele code is waar wanneer een van beide waarden waar is. Bijvoorbeeld: `a || b` is `true` wanneer `a` of `b` de waarde `true` heeft (of wanneer beide de waarde `true` hebben).</string>
				<key>Title</key>
				<string>logische OR-operator</string>
			</dict>
		</dict>
		<key>logical operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool, zoals `&amp;&amp;`, `||` of `!`, waarmee de logische Booleaanse waarden `true` en `false` worden gewijzigd of gecombineerd.</string>
				<key>Title</key>
				<string>logische operator</string>
			</dict>
		</dict>
		<key>loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een blok code dat een bepaald aantal keren wordt herhaald (bijvoorbeeld een `for`-lus) of dat wordt herhaald totdat aan een voorwaarde is voldaan (bijvoorbeeld een `while`-lus).</string>
				<key>Title</key>
				<string>lus</string>
			</dict>
		</dict>
		<key>memory</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het deel van de computer waarin de code voor een app en de gegevens die de app gebruikt tijdelijk of permanent worden opgeslagen.</string>
				<key>Title</key>
				<string>geheugen</string>
			</dict>
		</dict>
		<key>method</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een functie of set commando's die in een [type](glossary://type) is gedefinieerd.</string>
				<key>Title</key>
				<string>methode</string>
			</dict>
		</dict>
		<key>modifier</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In SwiftUI is een modifier een [methode](glossary://method) die wordt aangeroepen om het uiterlijk of gedrag van een weergave te wijzigen. Om modifiers leesbaarder te maken, wordt elke modifier op een afzonderlijke regel onder de weergave[instantie](glossary://instance) geplaatst.</string>
				<key>Title</key>
				<string>modifier</string>
			</dict>
		</dict>
		<key>modulo operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool (`%`) waarmee de restwaarde wordt geretourneerd nadat een getal door een ander getal is gedeeld. Bijvoorbeeld: `17 % 5` retourneert `2`.</string>
				<key>Title</key>
				<string>modulo-operator</string>
			</dict>
		</dict>
		<key>navigation bar</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met een navigatie-interface kun je één keuze per scherm maken totdat je een bestemming bereikt. Om naar een andere bestemming te gaan, moet je teruggaan of opnieuw beginnen vanaf het begin en andere keuzes maken. In de navigatiebalk boven in het scherm wordt een titel weergegeven waarmee je kunt onthouden waar je je bevindt en wordt een knop weergegeven waarmee je terug kunt keren naar het vorige scherm.</string>
				<key>Title</key>
				<string>navigatiebalk</string>
			</dict>
		</dict>
		<key>nest</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een herhaald blok code, zoals een lus, invoegen in een ander herhaald blok code.</string>
				<key>Title</key>
				<string>nesten</string>
			</dict>
		</dict>
		<key>observable object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Wanneer een klasse [zich conformeert](glossary://conform) aan het protocol `ObservableObject`, worden alle weergaven die die waarden gebruiken automatisch bijgewerkt, waarbij de wijzigingen worden weerspiegeld.</string>
				<key>Title</key>
				<string>observeerbaar object</string>
			</dict>
		</dict>
		<key>observed object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Wanneer een klasse [zich conformeert](glossary://conform) aan het protocol `ObservableObject`, zorgt een wijziging in een van de gepubliceerde waarden ervoor dat alle weergaven die die waarde gebruiken automatisch worden bijgewerkt, waarbij de wijziging wordt weerspiegeld.</string>
				<key>Title</key>
				<string>observeerbaar object</string>
			</dict>
		</dict>
		<key>observer</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met betrekking tot een [observeerbaar object](glossary://observable%20object) is een observer een weergave die of object dat de gegevens van het observeerbare object gebruikt. Wanneer de gegevens van het observeerbare object veranderen, herkent SwiftUI de wijziging en worden de observers bijgewerkt.</string>
				<key>Title</key>
				<string>observer</string>
			</dict>
		</dict>
		<key>operator</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een symbool, zoals `+`, `-` of `&amp;&amp;`, waarmee een bewerking wordt toegepast op een of meer waarden. Bijvoorbeeld: in `1 + 2` telt de operator (`+`) de getallen `1` en `2` bij elkaar op.</string>
				<key>Title</key>
				<string>operator</string>
			</dict>
		</dict>
		<key>outer loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een herhaald blok code (een lus) met daarin een andere lus (binnenste lus).</string>
				<key>Title</key>
				<string>buitenste lus</string>
			</dict>
		</dict>
		<key>parameter</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De naam van een invoerwaarde voor een functie die wordt gebruikt in de definitie van de functie. Bijvoorbeeld: in `move(distance: Int)` is `distance` een parameter die een waarde krijgt van het type Int.</string>
				<key>Title</key>
				<string>parameter</string>
			</dict>
		</dict>
		<key>parent view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De containerweergave voor een of meer [onderliggende weergaven](glossary://child%20view).</string>
				<key>Title</key>
				<string>bovenliggende weergave</string>
			</dict>
		</dict>
		<key>pattern</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een herhaalde set omstandigheden of gegevens.</string>
				<key>Title</key>
				<string>patroon</string>
			</dict>
		</dict>
		<key>pitch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In de muziek wordt met toonhoogte aangegeven hoe hoog of laag een noot is op basis van de frequentie van de trilling. De toonhoogte van een noot wordt gemeten in [Hertz](glossary://hertz). Een hoge toon (~2000 Hz) klinkt als een fluittoon, terwijl een lage toon (~40 Hz) als een loeiende koe klinkt.</string>
				<key>Title</key>
				<string>toonhoogte</string>
			</dict>
		</dict>
		<key>primitive</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met betrekking tot een programmeerframework, zoals SwiftUI, is een primitive een bouwsteen die door het framework wordt geleverd om complexere gedragingen of [interfaces](glossary://user%20interface) samen te stellen.
</string>
				<key>Title</key>
				<string>primitive</string>
			</dict>
		</dict>
		<key>primitive view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een [weergave](glossary://view) die wordt aangeboden door het [SwiftUI](glossary://SwiftUI)-framework, zoals een `Button`-, `Text`- of `Image`-weergave. Primitieve weergaven worden als bouwstenen gebruikt om complexere [samengestelde weergaven](glossary://composed%20view) in je [gebruikersinterface](glossary://user%20interface) aan te maken.</string>
				<key>Title</key>
				<string>primitieve weergave</string>
			</dict>
		</dict>
		<key>private</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met het sleutelwoord `private` zorg je dat de code alleen beschikbaar is in dat specifieke bronbestand.
- callout(Voorbeeld):
`private class MyApp: App { }`</string>
				<key>Title</key>
				<string>private</string>
			</dict>
		</dict>
		<key>property</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een variabele (een benoemde container waarin een waarde is opgeslagen) die is gedefinieerd in een type.</string>
				<key>Title</key>
				<string>eigenschap</string>
			</dict>
		</dict>
		<key>property wrapper</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een eigenschapwrapper is een eenvoudige manier om een gemeenschappelijk gedragspatroon op een eigenschap toe te passen. Deze wrapper is een manier om de eigenschap te annoteren waarbij wordt gedefinieerd hoe deze wordt opgeslagen of bij het lezen wordt berekend.   Zo geef je SwiftUI met de eigenschap `@State` de opdracht om de opslag voor een waarde te beheren om delen van een weergave die de waarde gebruiken bij te werken wanneer die waarde verandert.</string>
				<key>Title</key>
				<string>eigenschapwrapper</string>
			</dict>
		</dict>
		<key>protocol</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een reeks vereisten, zoals methoden en eigenschappen, die kunnen worden overgenomen (of gevolgd) door een type, zoals een klasse, structuur of opsomming.   Wanneer een type een protocol adopteert, biedt het zijn eigen implementatie van de protocolvereisten en wordt gezegd dat het aan dat protocol voldoet of zich eraan conformeert.</string>
				<key>Title</key>
				<string>protocol</string>
			</dict>
		</dict>
		<key>pseudocode</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een makkelijk leesbare beschrijving van een algoritme, meestal geschreven in een combinatie van natuurlijke taal en code.</string>
				<key>Title</key>
				<string>pseudocode</string>
			</dict>
		</dict>
		<key>public</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Met het sleutelwoord `public` zorg je dat de code beschikbaar is voor alle bestanden in je project
                        
- callout(Voorbeeld):
`public func decorateWithSticker(space: Space) { }`
                    </string>
				<key>Title</key>
				<string>public</string>
			</dict>
		</dict>
		<key>published value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voeg de [eigenschapwrapper](glossary://property%20wrapper) `@Published` toe om een eigenschap te declareren die alle [observers](glossary://observer) ervan op de hoogte brengt wanneer de waarde ervan op het punt staat te veranderen. Wanneer de waarde verandert, werkt SwiftUI alle weergaven bij die de gegevens ervan gebruiken.</string>
				<key>Title</key>
				<string>gepubliceerde waarde</string>
			</dict>
		</dict>
		<key>return type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Wanneer je een functie definieert, kun je een type waarde definiëren dat door de functie als uitvoer wordt geretourneerd als de functie klaar is. Dit wordt het retourtype van de functie genoemd.</string>
				<key>Title</key>
				<string>retourtype</string>
			</dict>
		</dict>
		<key>reusability</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een kenmerk waarmee wordt aangeduid dat code in verschillende situaties binnen een app kan worden gebruikt.</string>
				<key>Title</key>
				<string>herbruikbaarheid</string>
			</dict>
		</dict>
		<key>root view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een weergave waarin alle andere weergaven zijn geplaatst. Deze weergave staat bekend als een [weergave op het hoogste niveau](glossary://top-level%20view) en bevindt zich boven in een [weergavehiërarchie](glossary://view%20hierarchy) en fungeert als de [bovenliggende weergave](glossary://parent%20view) voor alle [onderliggende weergaven](glossary://child%20view) in de hiërarchie.</string>
				<key>Title</key>
				<string>rootweergave</string>
			</dict>
		</dict>
		<key>saturation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De intensiteit van de tint, variërend van een grijstint tot de volledige kleur. De verzadiging wordt weergegeven als een decimaal getal (double) tussen `0` en `1`.</string>
				<key>Title</key>
				<string>verzadiging</string>
			</dict>
		</dict>
		<key>sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een sensor is een onderdeel dat events detecteert, zoals een wijziging in temperatuur, licht, geluid of beweging, en een waarde retourneert.</string>
				<key>Title</key>
				<string>sensor</string>
			</dict>
		</dict>
		<key>source of truth</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>In de context van het bouwen van apps is dit een unieke locatie waar alle gegevens worden aangepast. Alle andere verbindingen met deze gegevens worden alleen met verwijzingen tot stand gebracht, waardoor het dupliceren van de informatie ervan op andere locaties wordt voorkomen. </string>
				<key>Title</key>
				<string>bron van waarheid</string>
			</dict>
		</dict>
		<key>speech synthesis</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Door computers gegenereerd geluid dat op menselijke spraak lijkt, meestal gegenereerd op basis van tekst.</string>
				<key>Title</key>
				<string>spraaksynthese</string>
			</dict>
		</dict>
		<key>state</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De opgeslagen informatie van een variabele, app of systeem op een bepaald moment.</string>
				<key>Title</key>
				<string>staat</string>
			</dict>
		</dict>
		<key>state object</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voeg de `@StateObject` [eigenschapwrapper](glossary://property%20wrapper) toe om een statusobject te declareren en geef een beginwaarde op die voldoet aan het `ObservableObject`-[protocol](glossary://protocol). SwiftUI beheert de opslag voor een statusobject en werkt alle subweergaven bij die de waarde gebruiken wanneer de gepubliceerde waarden van het statusobject veranderen.</string>
				<key>Title</key>
				<string>statusobject</string>
			</dict>
		</dict>
		<key>state value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Voeg `@State` toe voor een variabele om SwiftUI de opdracht te geven de opslag voor een waarde te beheren. Wanneer de waarde verandert, werkt SwiftUI alle delen van de weergave bij die de waarde gebruiken.</string>
				<key>Title</key>
				<string>statuswaarde</string>
			</dict>
		</dict>
		<key>statement</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een structuur, zoals een lus of `if`-instructie, waarmee code in een app wordt georganiseerd.</string>
				<key>Title</key>
				<string>instructie</string>
			</dict>
		</dict>
		<key>string component</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een deel, of substring, van een string nadat de string door een scheidingsteken is opgedeeld in delen. Als bijvoorbeeld de string `"hond+kat+vis"` wordt gesplitst door het scheidingsteken `"+"`, is het resultaat de afzonderlijke strings `"hond"`, `"kat"` en `"vis"`.</string>
				<key>Title</key>
				<string>stringcomponent</string>
			</dict>
		</dict>
		<key>string concatenation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een bewerking waarbij strings worden gecombineerd door de ene string aan het einde van de andere string toe te voegen. Bijvoorbeeld: de aaneenschakeling van `'voet'` en `'bal'` is `'voetbal'`.</string>
				<key>Title</key>
				<string>aaneenschakeling van strings</string>
			</dict>
		</dict>
		<key>string interpolation</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het gebruik van constanten, variabelen of code-uitdrukkingen binnen een langere string, waarbij deze door de huidige waarden worden vervangen wanneer de string wordt geëvalueerd. Als bijvoorbeeld in de string `"Katy ate a \(fruit)."` `fruit` een variabele is met de waarde `"peach"`, wordt `\(fruit)` vervangen door `"peach"` wanneer de string wordt geëvalueerd, wat `"Katy ate a peach."` oplevert.</string>
				<key>Title</key>
				<string>stringinterpolatie</string>
			</dict>
		</dict>
		<key>syntax</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De regels voor het schrijven van code die door computers kan worden begrepen en uitgevoerd.</string>
				<key>Title</key>
				<string>syntaxis</string>
			</dict>
		</dict>
		<key>top-level view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een weergave waarin alle andere weergaven zijn geplaatst. Deze weergave staat bekend als een [rootweergave](glossary://root%20view), bevindt zich boven in een [weergavehiërarchie](glossary://view%20hierarchy) en fungeert als de [bovenliggende weergave](glossary://parent%20view) voor alle [onderliggende weergaven](glossary://child%20view) in de hiërarchie.</string>
				<key>Title</key>
				<string>weergave op het hoogste niveau</string>
			</dict>
		</dict>
		<key>trailing edge</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De achterste rand in de context van de inhoud in een weergave verwijst deze naar de horizontale positie van het einde van de inhoud. De positie van de achterste rand is afhankelijk van je voorkeuren en is doorgaans gebaseerd op je land- en taalinstellingen.
                    Bij talen die van links naar rechts worden geschreven, zoals Engels of Nederlands, bevindt de achterste rand zich aan de rechterkant. Bij talen die van rechts naar links worden geschreven, zoals Arabisch of Hebreeuws, bevindt de achterste rand zich aan de linkerkant.</string>
				<key>Title</key>
				<string>voorste rand</string>
			</dict>
		</dict>
		<key>type</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een benoemde, gegroepeerde set eigenschappen (de kenmerken) en methoden (het gedrag) van een soort gegevens.</string>
				<key>Title</key>
				<string>type</string>
			</dict>
		</dict>
		<key>typography</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het artistieke en technische proces waarbij letters worden gerangschikt om geschreven taal begrijpelijk, leesbaar en aantrekkelijk weer te geven.</string>
				<key>Title</key>
				<string>typografie</string>
			</dict>
		</dict>
		<key>user input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Informatie die door een app wordt verzameld op basis van interactie met een gebruiker, zoals het aanraken van het scherm, tekst invoeren met een toetsenbord of spreken in een microfoon. 
</string>
				<key>Title</key>
				<string>gebruikersinvoer</string>
			</dict>
		</dict>
		<key>user interface</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De middelen waarmee een gebruiker een app bedient. De gebruikersinterface wordt ook wel 'UI' genoemd. Hiermee wordt verwezen naar het visuele gedeelte van een app waarmee een gebruiker communiceert, met elementen als afbeeldingen, tekst, knoppen, schuifknoppen en scrolweergaven.</string>
				<key>Title</key>
				<string>gebruikersinterface</string>
			</dict>
		</dict>
		<key>variable</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een benoemde container waarin een waarde is opgeslagen die kan worden gewijzigd.</string>
				<key>Title</key>
				<string>variabele</string>
			</dict>
		</dict>
		<key>velocity</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De snelheid van iets in een opgegeven richting.</string>
				<key>Title</key>
				<string>snelheid</string>
			</dict>
		</dict>
		<key>view</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een weergave is de bouwsteen van de gebruikersinterface van je app en vertegenwoordigt elk visueel element dat [zich conformeert](glossary://conform) aan het `View`-[protocol](glossary://protocol).

Enkele voorbeelden van weergaven in SwiftUI zijn tekstweergaven, afbeeldingsweergaven, schuifknoppen, rasters, knoppen en vormen.</string>
				<key>Title</key>
				<string>weergave</string>
			</dict>
		</dict>
		<key>view hierarchy</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een structuur die de lay-out van weergaven definieert ten opzichte van andere weergaven, met een verwijzing naar een weergave-instantie op het hoogste niveau boven in de hiërarchie. De weergave op het hoogste niveau kan een willekeurig aantal subweergaven bevatten die elk hun eigen subweergaven kunnen bevatten, enzovoort.</string>
				<key>Title</key>
				<string>weergavehiërarchie</string>
			</dict>
		</dict>
		<key>volume</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Het volume is de luidheid van het geluid dat door de [sensor](glossary://sensor) wordt gedetecteerd. De waarde ervan ligt tussen 0 en 1.</string>
				<key>Title</key>
				<string>volume</string>
			</dict>
		</dict>
		<key>while loop</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Een blok code dat wordt uitgevoerd zolang een opgegeven voorwaarde `true` is. Wanneer de voorwaarde in `false` verandert, wordt het uitvoeren van de lus gestopt.</string>
				<key>Title</key>
				<string>while-lus</string>
			</dict>
		</dict>
		<key>wireframe</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>De omtrek van een object, zoals een edelsteen, schakelaar of blok, in de virtuele wereld. Een draadmodel wordt gebruikt om de mogelijkheid aan te geven dat het object op een willekeurige plaats kan verschijnen wanneer het raadsel wordt uitgevoerd.</string>
				<key>Title</key>
				<string>draadmodel</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
